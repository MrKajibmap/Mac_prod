/**************************************************************************** 
 * Job:             001_200_Setup_Scheduler               A5VLIHEZ.BS000035 * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Blocks/001_Setup                               * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);
%let etls_userID = %nrquote(sasmi);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */ 
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать поток                          A5VLIHEZ.BT000073 * 
 * Transform:       Начать поток                                            * 
 * Description:     Открывает поток загрузки                                * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000073);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_stream_start.sas 3629:0a610733da87 2014-12-22 12:21:10Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало потока ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_stream_start;
   %etl_stream_start;
%mend transform_stream_start;

%transform_stream_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать поток **/

/**************************************************************************** 
 * Job:             001_200_1_Setup_ETL_MODULE            A5VLIHEZ.BS00002J * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_MODULE.csv -                      A5VLIHEZ.BZ00000A * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_M                     * 
 *                  ODULE.csv                                               * 
 * Target Table:    ETL_MODULE - etl_sys.ETL_MODULE       A5VLIHEZ.BM00004J * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002J);
%let etls_jobName = %nrquote(001_200_1_Setup_ETL_MODULE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00008V * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008V);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT00008W * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_MODULE.csv -                      A5VLIHEZ.BZ00000A * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_M                     * 
 *                  ODULE.csv                                               * 
 * Target Table:    File Reader - work.W20RS9JN           A5VLIHEZ.BV00003C * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008W);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W20RS9JN;
quit;

data work.W20RS9JN / view = work.W20RS9JN ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_MODULE.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib MODULE_ID length = 8
      format = 21.
      informat = 21.; 
   attrib MODULE_DESC length = $200
      format = $200.
      informat = $200.; 
   attrib MODULE_TYPE_CD length = $3
      format = $3.
      informat = $3.; 
   attrib MODULE_TXT length = $200
      format = $200.
      informat = $200.; 
   
   input MODULE_ID MODULE_DESC MODULE_TYPE_CD MODULE_TXT; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00008X * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W20RS9JN           A5VLIHEZ.BV00003C * 
 * Target Table:    ETL_MODULE - etl_sys.ETL_MODULE       A5VLIHEZ.BM00004J * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008X);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W20RS9JN); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_MODULE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_MODULE, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_MODULE
              (dbnull = (
                         MODULE_ID = NO
                         MODULE_DESC = YES
                         MODULE_TYPE_CD = NO
                         MODULE_TXT = NO));
         attrib MODULE_ID length = 8
            label = 'MODULE_ID'; 
         attrib MODULE_DESC length = $200
            format = $200.
            informat = $200.
            label = 'MODULE_DESC'; 
         attrib MODULE_TYPE_CD length = $3
            format = $3.
            informat = $3.
            label = 'MODULE_TYPE_CD'; 
         attrib MODULE_TXT length = $200
            format = $200.
            informat = $200.
            label = 'MODULE_TXT'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.ETL_MODULE      
               add primary key (MODULE_ID)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_MODULE, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_MODULE, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_MODULE( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_MODULE as m
            set MODULE_DESC = (select MODULE_DESC from &etls_lastTable as t 
                                where m.MODULE_ID = t.MODULE_ID),
                   MODULE_TYPE_CD = (select MODULE_TYPE_CD from &etls_lastTable as t 
                                where m.MODULE_ID = t.MODULE_ID),
                   MODULE_TXT = (select MODULE_TXT from &etls_lastTable as t 
                                where m.MODULE_ID = t.MODULE_ID)
               where exists (select * from &etls_lastTable as t
                                   where m.MODULE_ID = t.MODULE_ID);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_MODULE
                   as m 
                                      where m.MODULE_ID = t.MODULE_ID)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_MODULE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00008Y * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008Y);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_1_Setup_ETL_MODULE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_2_Setup_ETL_RESOURCE_GROUP    A5VLIHEZ.BS00002K * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_GROUP.csv -              A5VLIHEZ.BZ00000E * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_GROUP.csv                                       * 
 * Target Table:    ETL_RESOURCE_GROUP -                  A5VLIHEZ.BM00004O * 
 *                   etl_sys.ETL_RESOURCE_GROUP                             * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002K);
%let etls_jobName = %nrquote(001_200_2_Setup_ETL_RESOURCE_GROUP);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00008Z * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008Z);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT000090 * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_GROUP.csv -              A5VLIHEZ.BZ00000E * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_GROUP.csv                                       * 
 * Target Table:    File Reader - work.WT2NJWRA           A5VLIHEZ.BV00003D * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000090);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete WT2NJWRA;
quit;

data work.WT2NJWRA / view = work.WT2NJWRA ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_RESOURCE_GROUP.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib RESOURCE_GROUP_CD length = $32
      format = $32.
      informat = $32.; 
   attrib RELOAD_POLICY_CD length = $3
      format = $3.
      informat = $3.; 
   attrib COMPLETE_EXTRACT_FLG length = $1
      format = $1.
      informat = $1.; 
   attrib LOAD_MODULE_ID length = 8; 
   
   input RESOURCE_GROUP_CD RELOAD_POLICY_CD COMPLETE_EXTRACT_FLG LOAD_MODULE_ID; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT000091 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.WT2NJWRA           A5VLIHEZ.BV00003D * 
 * Target Table:    ETL_RESOURCE_GROUP -                  A5VLIHEZ.BM00004O * 
 *                   etl_sys.ETL_RESOURCE_GROUP                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000091);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WT2NJWRA); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE_GROUP, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_RESOURCE_GROUP, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_RESOURCE_GROUP
              (dbnull = (
                         RESOURCE_GROUP_CD = NO
                         RELOAD_POLICY_CD = NO
                         COMPLETE_EXTRACT_FLG = YES
                         LOAD_MODULE_ID = YES));
         attrib RESOURCE_GROUP_CD length = $32
            format = $32.
            informat = $32.
            label = 'RESOURCE_GROUP_CD'; 
         attrib RELOAD_POLICY_CD length = $3
            format = $3.
            informat = $3.
            label = 'RELOAD_POLICY_CD'; 
         attrib COMPLETE_EXTRACT_FLG length = $1
            format = $1.
            informat = $1.
            label = 'COMPLETE_EXTRACT_FLG'; 
         attrib LOAD_MODULE_ID length = 8
            label = 'LOAD_MODULE_ID'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE_GROUP, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_RESOURCE_GROUP, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_RESOURCE_GROUP( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_RESOURCE_GROUP as m
            set RELOAD_POLICY_CD = (select RELOAD_POLICY_CD from &etls_lastTable as t 
                                where m.RESOURCE_GROUP_CD = t.RESOURCE_GROUP_CD),
                   COMPLETE_EXTRACT_FLG = (select COMPLETE_EXTRACT_FLG from &etls_lastTable as t 
                                where m.RESOURCE_GROUP_CD = t.RESOURCE_GROUP_CD),
                   LOAD_MODULE_ID = (select LOAD_MODULE_ID from &etls_lastTable as t 
                                where m.RESOURCE_GROUP_CD = t.RESOURCE_GROUP_CD)
               where exists (select * from &etls_lastTable as t
                                   where m.RESOURCE_GROUP_CD = t.RESOURCE_GROUP_CD);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_RESOURCE_GROUP
                   as m 
                                      where m.RESOURCE_GROUP_CD = t.RESOURCE_GROUP_CD)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_RESOURCE_GROUP 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT000092 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000092);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_2_Setup_ETL_RESOURCE_GROUP **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_3_Setup_ETL_RESOURCE          A5VLIHEZ.BS00002L * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE.csv -                    A5VLIHEZ.BZ00000D * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE.csv                                             * 
 * Target Table:    ETL_RESOURCE - etl_sys.ETL_RESOURCE   A5VLIHEZ.BM00004N * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002L);
%let etls_jobName = %nrquote(001_200_3_Setup_ETL_RESOURCE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT000093 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000093);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT000094 * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE.csv -                    A5VLIHEZ.BZ00000D * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE.csv                                             * 
 * Target Table:    File Reader - work.W370U0IA           A5VLIHEZ.BV00003E * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000094);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W370U0IA;
quit;

data work.W370U0IA / view = work.W370U0IA ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_RESOURCE.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib RESOURCE_ID length = 8; 
   attrib RESOURCE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib RESOURCE_GROUP_CD length = $32
      format = $32.
      informat = $32.; 
   attrib RESOURCE_DESC length = $100
      format = $100.
      informat = $100.; 
   
   input RESOURCE_ID RESOURCE_CD RESOURCE_GROUP_CD RESOURCE_DESC; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT000095 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W370U0IA           A5VLIHEZ.BV00003E * 
 * Target Table:    ETL_RESOURCE - etl_sys.ETL_RESOURCE   A5VLIHEZ.BM00004N * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000095);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W370U0IA); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_RESOURCE, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_RESOURCE
              (dbnull = (
                         RESOURCE_ID = NO
                         RESOURCE_CD = NO
                         RESOURCE_GROUP_CD = YES
                         RESOURCE_DESC = YES));
         attrib RESOURCE_ID length = 8
            label = 'RESOURCE_ID'; 
         attrib RESOURCE_CD length = $32
            format = $32.
            informat = $32.
            label = 'RESOURCE_CD'; 
         attrib RESOURCE_GROUP_CD length = $32
            format = $32.
            informat = $32.
            label = 'RESOURCE_GROUP_CD'; 
         attrib RESOURCE_DESC length = $100
            format = $100.
            informat = $100.
            label = 'RESOURCE_DESC'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.ETL_RESOURCE      
               add primary key (RESOURCE_ID)
               add unique (RESOURCE_CD)
               add foreign key (RESOURCE_GROUP_CD) references ETL_SYS.ETL_RESOURCE_GROUP
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_RESOURCE, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_RESOURCE( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_RESOURCE as m
            set RESOURCE_CD = (select RESOURCE_CD from &etls_lastTable as t 
                                where m.RESOURCE_ID = t.RESOURCE_ID),
                   RESOURCE_GROUP_CD = (select RESOURCE_GROUP_CD from &etls_lastTable as t 
                                where m.RESOURCE_ID = t.RESOURCE_ID),
                   RESOURCE_DESC = (select RESOURCE_DESC from &etls_lastTable as t 
                                where m.RESOURCE_ID = t.RESOURCE_ID)
               where exists (select * from &etls_lastTable as t
                                   where m.RESOURCE_ID = t.RESOURCE_ID);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_RESOURCE
                   as m 
                                      where m.RESOURCE_ID = t.RESOURCE_ID)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_RESOURCE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Обновление формата                    A5VLIHEZ.BT000096 * 
 * Transform:       Обновление формата                                      * 
 * Description:     res_cd_id                                               * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000096);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let tpFmtName = %nrquote(res_cd_id                       );
%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_format_gen.sas 2947:dfe3d214f2e2 2014-05-20 11:26:53Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Обновляет один (ин)формат (ETL_FORMAT).
*
*  ПАРАМЕТРЫ:
*     tpFmtName               +  имя (ин)формата
*
******************************************************************/

%macro transform_format_gen;
   %format_gen (mpFmtName=&tpFmtName);
%mend transform_format_gen;

%transform_format_gen;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Обновление формата **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT000097 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000097);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_3_Setup_ETL_RESOURCE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_4_Setup_ETL_RESOURCE_X_SOURCE A5VLIHEZ.BS00002M * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_X_SOURCE.csv -           A5VLIHEZ.BZ00000G * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_X_SOURCE.csv                                    * 
 * Target Table:    ETL_RESOURCE_X_SOURCE -               A5VLIHEZ.BM00004S * 
 *                   etl_sys.ETL_RESOURCE_X_SOURCE                          * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002M);
%let etls_jobName = %nrquote(001_200_4_Setup_ETL_RESOURCE_X_SOURCE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT000098 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000098);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT000099 * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_X_SOURCE.csv -           A5VLIHEZ.BZ00000G * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_X_SOURCE.csv                                    * 
 * Target Table:    File Reader - work.W56WGU32           A5VLIHEZ.BV00003F * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT000099);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete etls_W56WGU32;
quit;

data work.etls_W56WGU32 / view = work.etls_W56WGU32 ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_RESOURCE_X_SOURCE.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib RESOURCE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib SOURCE_TYPE_CD length = $10
      format = $10.
      informat = $10.; 
   attrib SOURCE_ROLE_CD length = $10
      format = $10.
      informat = $10.; 
   attrib LIBREF_CD length = $8
      format = $8.
      informat = $8.; 
   attrib TABLE_NM length = $32
      format = $32.
      informat = $32.; 
   attrib FILE_NM length = $100
      format = $100.
      informat = $100.; 
   attrib STORED_PROC_NM length = $100
      format = $100.
      informat = $100.; 
   
   input RESOURCE_CD SOURCE_TYPE_CD SOURCE_ROLE_CD LIBREF_CD TABLE_NM FILE_NM 
         STORED_PROC_NM; 
   
run; 

%rcSet(&syserr); 

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete W56WGU32;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.W56WGU32 as
      select
         (input(RESOURCE_CD, res_cd_id.)) as RESOURCE_ID length = 8
            label = 'RESOURCE_ID',
         SOURCE_TYPE_CD,
         SOURCE_ROLE_CD,
         LIBREF_CD,
         TABLE_NM,
         FILE_NM,
         STORED_PROC_NM
   from work.etls_W56WGU32
   ;
quit;

%let SYSLAST = work.W56WGU32;



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00009A * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W56WGU32           A5VLIHEZ.BV00003F * 
 * Target Table:    ETL_RESOURCE_X_SOURCE -               A5VLIHEZ.BM00004S * 
 *                   etl_sys.ETL_RESOURCE_X_SOURCE                          * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009A);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W56WGU32); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE_X_SOURCE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_RESOURCE_X_SOURCE, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_RESOURCE_X_SOURCE
              (dbnull = (
                         RESOURCE_ID = NO
                         SOURCE_TYPE_CD = NO
                         SOURCE_ROLE_CD = NO
                         LIBREF_CD = YES
                         TABLE_NM = YES
                         FILE_NM = YES
                         STORED_PROC_NM = YES));
         attrib RESOURCE_ID length = 8
            label = 'RESOURCE_ID'; 
         attrib SOURCE_TYPE_CD length = $10
            format = $10.
            informat = $10.
            label = 'SOURCE_TYPE_CD'; 
         attrib SOURCE_ROLE_CD length = $10
            format = $10.
            informat = $10.
            label = 'SOURCE_ROLE_CD'; 
         attrib LIBREF_CD length = $8
            format = $8.
            informat = $8.
            label = 'LIBREF_CD'; 
         attrib TABLE_NM length = $32
            format = $32.
            informat = $32.
            label = 'TABLE_NM'; 
         attrib FILE_NM length = $100
            format = $100.
            informat = $100.
            label = 'FILE_NM'; 
         attrib STORED_PROC_NM length = $100
            format = $100.
            informat = $100.
            label = 'STORED_PROC_NM'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_SYS.ETL_RESOURCE_X_SOURCE
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_RESOURCE_X_SOURCE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009B * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009B);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_4_Setup_ETL_RESOURCE_X_SOURCE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_5_Setup_ETL_RESOURCE_X_ARCH   A5VLIHEZ.BS00002N * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_X_ARCH.csv -             A5VLIHEZ.BZ00000F * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_X_ARCH.csv                                      * 
 * Target Table:    ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
 *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002N);
%let etls_jobName = %nrquote(001_200_5_Setup_ETL_RESOURCE_X_ARCH);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009C * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009C);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT00009D * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_RESOURCE_X_ARCH.csv -             A5VLIHEZ.BZ00000F * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_R                     * 
 *                  ESOURCE_X_ARCH.csv                                      * 
 * Target Table:    File Reader - work.W56WGU32           A5VLIHEZ.BV00003G * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete etls_W56WGU32;
quit;

data work.etls_W56WGU32 / view = work.etls_W56WGU32 ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_RESOURCE_X_ARCH.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib RESOURCE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib ARCH_NM length = $32
      format = $32.
      informat = $32.; 
   attrib ARCH_ROLE_CD length = $10
      format = $10.
      informat = $10.; 
   
   input RESOURCE_CD ARCH_NM ARCH_ROLE_CD; 
   
run; 

%rcSet(&syserr); 

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete W56WGU32;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.W56WGU32 as
      select
         (input(RESOURCE_CD, res_cd_id.)) as RESOURCE_ID length = 8
            label = 'RESOURCE_ID',
         ARCH_NM,
         ARCH_ROLE_CD
   from work.etls_W56WGU32
   ;
quit;

%let SYSLAST = work.W56WGU32;



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00009E * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W56WGU32           A5VLIHEZ.BV00003G * 
 * Target Table:    ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
 *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009E);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W56WGU32); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEEBKID;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WEEBKID as
         select
            RESOURCE_ID,
            ARCH_NM,
            ARCH_ROLE_CD
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WEEBKID;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_RESOURCE_X_ARCH, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_RESOURCE_X_ARCH, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_RESOURCE_X_ARCH
              (dbnull = (
                         RESOURCE_ID = NO
                         ARCH_NM = NO
                         ARCH_ROLE_CD = NO));
         attrib RESOURCE_ID length = 8
            label = 'RESOURCE_ID'; 
         attrib ARCH_NM length = $32
            format = $32.
            informat = $32.
            label = 'ARCH_NM'; 
         attrib ARCH_ROLE_CD length = $10
            format = $10.
            informat = $10.
            label = 'ARCH_ROLE_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_SYS.ETL_RESOURCE_X_ARCH
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_RESOURCE_X_ARCH 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEEBKID;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009F * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009F);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_5_Setup_ETL_RESOURCE_X_ARCH **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_6_Setup_ETL_SCHEDULE          A5VLIHEZ.BS00002O * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_SCHEDULE.csv -                    A5VLIHEZ.BZ00000H * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_S                     * 
 *                  CHEDULE.csv                                             * 
 * Target Table:    ETL_SCHEDULE - etl_sys.ETL_SCHEDULE   A5VLIHEZ.BM00004T * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002O);
%let etls_jobName = %nrquote(001_200_6_Setup_ETL_SCHEDULE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009G * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009G);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT00009H * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_SCHEDULE.csv -                    A5VLIHEZ.BZ00000H * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_S                     * 
 *                  CHEDULE.csv                                             * 
 * Target Table:    File Reader - work.W20PNRLY           A5VLIHEZ.BV00003H * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009H);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W20PNRLY;
quit;

data work.W20PNRLY / view = work.W20PNRLY ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_SCHEDULE.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib SCHEDULE_CD length = $20
      format = $20.
      informat = $20.; 
   attrib SCHEDULE_DESC length = $100
      format = $100.
      informat = $100.; 
   
   input SCHEDULE_CD SCHEDULE_DESC; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Отсекаем комментарии                  A5VLIHEZ.BT00009I * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W20PNRLY           A5VLIHEZ.BV00003H * 
 * Target Table:    Extract - work.WOJO3HP3               A5VLIHEZ.BV00003I * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009I);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W20PNRLY); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WOJO3HP3;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WOJO3HP3 as
      select
         SCHEDULE_CD,
         SCHEDULE_DESC
   from &SYSLAST
      where not missing(SCHEDULE_CD)
   ;
quit;

%let SYSLAST = work.WOJO3HP3;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/** Step end Отсекаем комментарии **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00009J * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Extract - work.WOJO3HP3               A5VLIHEZ.BV00003I * 
 * Target Table:    ETL_SCHEDULE - etl_sys.ETL_SCHEDULE   A5VLIHEZ.BM00004T * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009J);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WOJO3HP3); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_SCHEDULE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_SCHEDULE, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_SCHEDULE
              (dbnull = (
                         SCHEDULE_CD = NO
                         SCHEDULE_DESC = YES));
         attrib SCHEDULE_CD length = $20
            format = $20.
            informat = $20.
            label = 'SCHEDULE_CD'; 
         attrib SCHEDULE_DESC length = $100
            format = $100.
            informat = $100.
            label = 'SCHEDULE_DESC'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.ETL_SCHEDULE      
               add primary key (SCHEDULE_CD)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_SCHEDULE, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_SCHEDULE, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_SCHEDULE( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_SCHEDULE as m
            set SCHEDULE_DESC = (select SCHEDULE_DESC from &etls_lastTable as t 
                                where m.SCHEDULE_CD = t.SCHEDULE_CD)
               where exists (select * from &etls_lastTable as t
                                   where m.SCHEDULE_CD = t.SCHEDULE_CD);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_SCHEDULE
                   as m 
                                      where m.SCHEDULE_CD = t.SCHEDULE_CD)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_SCHEDULE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009K * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009K);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_6_Setup_ETL_SCHEDULE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_7_Setup_ETL_SCHEDULE_FRAME    A5VLIHEZ.BS00002P * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    TMP_SCHEDULE_FRAME -                  A5VLIHEZ.BM000052 * 
 *                   etl_sys.TMP_SCHEDULE_FRAME                             * 
 * Target Tables:   TMP_SCHEDULE_FRAME -                  A5VLIHEZ.BM000052 * 
 *                   etl_sys.TMP_SCHEDULE_FRAME                             * 
 *                  ETL_SCHEDULE_FRAME -                  A5VLIHEZ.BM00004U * 
 *                   etl_sys.ETL_SCHEDULE_FRAME                             * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002P);
%let etls_jobName = %nrquote(001_200_7_Setup_ETL_SCHEDULE_FRAME);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009L * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009L);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            User Written                          A5VLIHEZ.BT00009M * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Target Table:    User Written - work.W2DRTP6G          A5VLIHEZ.BV00003J * 
 *                                                                          * 
 * User Written:    002_020_Setup_ETL_SCHEDULE_FRAME                        * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009M);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0;
%let _OUTPUT_count = 1;
%let _OUTPUT = work.W2DRTP6G;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/User Written_A5VLIHEZ.BV00003J%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = FRAME_ID SCHEDULE_CD OPEN_DTTM CLOSE_DTTM;
%let _OUTPUT_col_count = 4;
%let _OUTPUT_col0_name = FRAME_ID;
%let _OUTPUT_col0_table = work.W2DRTP6G;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = ;
%let _OUTPUT_col0_informat = ;
%let _OUTPUT_col0_label = %nrquote(FRAME_ID);
%let _OUTPUT_col0_exp = ;
%let _OUTPUT_col0_input_count = 0;
%let _OUTPUT_col1_name = SCHEDULE_CD;
%let _OUTPUT_col1_table = work.W2DRTP6G;
%let _OUTPUT_col1_length = 20;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = $20.;
%let _OUTPUT_col1_informat = $20.;
%let _OUTPUT_col1_label = %nrquote(SCHEDULE_CD);
%let _OUTPUT_col1_exp = ;
%let _OUTPUT_col1_input_count = 0;
%let _OUTPUT_col2_name = OPEN_DTTM;
%let _OUTPUT_col2_table = work.W2DRTP6G;
%let _OUTPUT_col2_length = 8;
%let _OUTPUT_col2_type = ;
%let _OUTPUT_col2_format = DATETIME20.;
%let _OUTPUT_col2_informat = DATETIME20.;
%let _OUTPUT_col2_label = %nrquote(OPEN_DTTM);
%let _OUTPUT_col2_exp = ;
%let _OUTPUT_col2_input_count = 0;
%let _OUTPUT_col3_name = CLOSE_DTTM;
%let _OUTPUT_col3_table = work.W2DRTP6G;
%let _OUTPUT_col3_length = 8;
%let _OUTPUT_col3_type = ;
%let _OUTPUT_col3_format = DATETIME20.;
%let _OUTPUT_col3_informat = DATETIME20.;
%let _OUTPUT_col3_label = %nrquote(CLOSE_DTTM);
%let _OUTPUT_col3_exp = ;
%let _OUTPUT_col3_input_count = 0;
%let _OUTPUT_filetype = WorkTable;

%let _OUTPUT1 = work.W2DRTP6G;
%let _OUTPUT1_connect = ;
%let _OUTPUT1_engine = ;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote();
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/User Written_A5VLIHEZ.BV00003J%(WorkTable%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = FRAME_ID SCHEDULE_CD OPEN_DTTM CLOSE_DTTM;
%let _OUTPUT1_col_count = 4;
%let _OUTPUT1_col0_name = FRAME_ID;
%let _OUTPUT1_col0_table = work.W2DRTP6G;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = ;
%let _OUTPUT1_col0_informat = ;
%let _OUTPUT1_col0_label = %nrquote(FRAME_ID);
%let _OUTPUT1_col0_exp = ;
%let _OUTPUT1_col0_input_count = 0;
%let _OUTPUT1_col1_name = SCHEDULE_CD;
%let _OUTPUT1_col1_table = work.W2DRTP6G;
%let _OUTPUT1_col1_length = 20;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = $20.;
%let _OUTPUT1_col1_informat = $20.;
%let _OUTPUT1_col1_label = %nrquote(SCHEDULE_CD);
%let _OUTPUT1_col1_exp = ;
%let _OUTPUT1_col1_input_count = 0;
%let _OUTPUT1_col2_name = OPEN_DTTM;
%let _OUTPUT1_col2_table = work.W2DRTP6G;
%let _OUTPUT1_col2_length = 8;
%let _OUTPUT1_col2_type = ;
%let _OUTPUT1_col2_format = DATETIME20.;
%let _OUTPUT1_col2_informat = DATETIME20.;
%let _OUTPUT1_col2_label = %nrquote(OPEN_DTTM);
%let _OUTPUT1_col2_exp = ;
%let _OUTPUT1_col2_input_count = 0;
%let _OUTPUT1_col3_name = CLOSE_DTTM;
%let _OUTPUT1_col3_table = work.W2DRTP6G;
%let _OUTPUT1_col3_length = 8;
%let _OUTPUT1_col3_type = ;
%let _OUTPUT1_col3_format = DATETIME20.;
%let _OUTPUT1_col3_informat = DATETIME20.;
%let _OUTPUT1_col3_label = %nrquote(CLOSE_DTTM);
%let _OUTPUT1_col3_exp = ;
%let _OUTPUT1_col3_input_count = 0;
%let _OUTPUT1_filetype = WorkTable;

/*---- Start of User Written Code  ----*/ 

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: 002_050_Setup_ETL_SCHEDULE_FRAME.sas 3639:2e78f1cac15c 2015-01-14 13:18:26Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Создает графики запусков.
*
******************************************************************
*  Использует:
*     нет
*
*  Устанавливает макропеременные:
*     нет
*
******************************************************************
*  14-02-2012  Нестерёнок     Начальное кодирование
*  08-07-2013  Нестерёнок     Добавил S01, S02
*  29-04-2014  Нестерёнок     Добавил защиту от дураков
*  04-08-2014  Нестерёнок     Замена на стандартные расписания
*  25-11-2014  Нестерёнок     Добавил стандартный постоянный график
******************************************************************/


%let ETL_DWH_INIT_DT = %sysfunc(putn('22NOV2017'd, best.));
%let ETL_MAX_DT = %sysfunc(putn('01Dec2018'd, best.));

/* INIT - Инициализационный график */
data work.w_002_050_INIT;
   length schedule_cd $20 open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20.;

   open_dttm  = &ETL_DWH_INIT_DT.;
   close_dttm = &ETL_MAX_DT.;
   schedule_cd = "INIT";
run;

/* DAY - Дневной график */
data work.w_002_050_DAY;
   length schedule_cd $20 curr_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;

   do curr_dt = &ETL_DWH_INIT_DT to &ETL_MAX_DT;
      open_dttm   = dhms (curr_dt,   0,  0, 0);
      close_dttm  = dhms (curr_dt,  23, 59, 0);
      schedule_cd = "DAY";
      output;
   end;
run;

/* WEEK_MON - Недельный график, начиная с понедельника */
data work.w_002_050_WEEK_MON;
   length schedule_cd $20 curr_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;

   do curr_dt = intnx('week.2', &ETL_DWH_INIT_DT., 0, 'b') to intnx('week.2', &ETL_MAX_DT, 0, 'e') by 7;
      open_dttm   = dhms (curr_dt,   0,  0, 0);
      close_dttm  = dhms (curr_dt+6,  23, 59, 0);
      schedule_cd = "WEEK_MON";
      output;
   end;
run;

/* WEEK_TUE - Недельный график, начиная со вторника */
data work.w_002_050_WEEK_TUE;
   length schedule_cd $20 curr_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;

   do curr_dt = intnx('week.3', &ETL_DWH_INIT_DT., 0, 'b') to intnx('week.3', &ETL_MAX_DT, 0, 'e') by 7;
      open_dttm   = dhms (curr_dt,   0,  0, 0);
      close_dttm  = dhms (curr_dt+6,  23, 59, 0);
      schedule_cd = "WEEK_TUE";
      output;
   end;
run;

/* STD - Стандартные часовые графики (по 1, 2 и 4 часа через каждые 30 минут) */
data work.w_002_050_STDH;
   length schedule_cd $20 curr_dt curr_time_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;
   drop curr_time_dt;

   do curr_dt = &ETL_DWH_INIT_DT to &ETL_MAX_DT;
      do curr_time_dt = dhms (curr_dt,  0, 00, 0) to dhms (curr_dt,  23, 30, 0) by hms (0, 30, 0);
         open_dttm  = curr_time_dt;
         close_dttm = curr_time_dt + hms (1, 0, 0);
         schedule_cd = cat("STD", "_", put(timepart(open_dttm), tod5.), "_", put(timepart(close_dttm), tod5.));
         output;
         close_dttm = curr_time_dt + hms (2, 0, 0);
         schedule_cd = cat("STD", "_", put(timepart(open_dttm), tod5.), "_", put(timepart(close_dttm), tod5.));
         output;
         close_dttm = curr_time_dt + hms (4, 0, 0);
         schedule_cd = cat("STD", "_", put(timepart(open_dttm), tod5.), "_", put(timepart(close_dttm), tod5.));
         output;
      end;
   end;
run;

/* STD - Стандартный постоянный график (по 10 минут каждые 10 минут с 23-00 по 05-00) */
data work.w_002_050_STD10M;
   length schedule_cd $20 curr_dt curr_time_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;
   drop curr_time_dt;

   do curr_dt = &ETL_DWH_INIT_DT to &ETL_MAX_DT;
      do curr_time_dt = dhms (curr_dt, 23, 00, 0) to dhms (curr_dt+1,  04, 50, 0) by hms (0, 10, 0);
         open_dttm  = curr_time_dt;
         close_dttm = curr_time_dt + hms (0, 10, 0);
         schedule_cd = cat("STD", "_", put(timepart(open_dttm), tod5.), "_", put(timepart(close_dttm), tod5.));
         output;
      end;
   end;
run;

/* DM_MON - График построения витрины MON */
/* каждый день, с DMMON_START_LOAD_TIME по 23:59 */
/*data work.w_002_050_DM_MON;
   length schedule_cd $20 curr_dt open_dttm close_dttm 8;
   format open_dttm close_dttm datetime20. curr_dt date9.;
   do curr_dt = &ETL_DWH_INIT_DT to &ETL_MAX_DT;
      open_dttm   = dhms (curr_dt,   0,  0, 0) + &DMMON_START_LOAD_TIME;
      close_dttm  = dhms (curr_dt,  23, 59, 0);
      schedule_cd = "DM_MON";
      output;
   end;
run;
*/


/* объединяем все графики */
data work.w_002_050;
   set work.w_002_050_:;
run;

/* защита от дураков */
proc sort data=work.w_002_050;
   by schedule_cd open_dttm;
run;

data
   work.x_002_050_valid
   &_OUTPUT2
;
   set work.w_002_050;
   by schedule_cd open_dttm;

   retain last_close_dttm;
   if first.schedule_cd then
      last_close_dttm = &ETL_MIN_DTTM;

   if
      (open_dttm ge close_dttm) or
      (not first.schedule_cd and (open_dttm lt last_close_dttm))
   then
      output &_OUTPUT2;
   else do;
      output work.x_002_050_valid;
      last_close_dttm   =  close_dttm;
   end;

   keep schedule_cd open_dttm close_dttm;
run;

%macro sm_002_050_validate;
   %local lmvObs;
   %let lmvObs = %member_obs(mpData=&_OUTPUT2);
   %if &lmvObs le 0 %then %return;

   %job_event_reg (
      mpEventTypeCode=  DATA_VALIDATION_FAILED,
      mpEventValues=    %bquote(Некорректные интервалы (&lmvObs) отброшены в таблицу &_OUTPUT2)
   );
%mend sm_002_050_validate;
%sm_002_050_validate;


/* расчет ид-а окна */
data &_OUTPUT1;
   set work.x_002_050_valid;
   keep frame_id schedule_cd open_dttm close_dttm;

   by schedule_cd;
   retain frame_id;

   /* Ни в коем случае нельзя менять указанные ниже константы! */
   /* В противном случае все идентификаторы окон изменятся и всю историю загрузок придется стирать!! */
   if first.schedule_cd then do;
      select(schedule_cd);
         /* Инициализационный график */
         when("INIT")    frame_id = 1;

         /* Стандартные графики по 1 часу */
         when("STD_00:00_01:00")    frame_id = 10000000;
         when("STD_01:00_02:00")    frame_id = 10100000;
         when("STD_02:00_03:00")    frame_id = 10200000;
         when("STD_03:00_04:00")    frame_id = 10300000;
         when("STD_04:00_05:00")    frame_id = 10400000;
         when("STD_05:00_06:00")    frame_id = 10500000;
         when("STD_06:00_07:00")    frame_id = 10600000;
         when("STD_07:00_08:00")    frame_id = 10700000;
         when("STD_08:00_09:00")    frame_id = 10800000;
         when("STD_09:00_10:00")    frame_id = 10900000;
         when("STD_10:00_11:00")    frame_id = 11000000;
         when("STD_11:00_12:00")    frame_id = 11100000;
         when("STD_12:00_13:00")    frame_id = 11200000;
         when("STD_13:00_14:00")    frame_id = 11300000;
         when("STD_14:00_15:00")    frame_id = 11400000;
         when("STD_15:00_16:00")    frame_id = 11500000;
         when("STD_16:00_17:00")    frame_id = 11600000;
         when("STD_17:00_18:00")    frame_id = 11700000;
         when("STD_18:00_19:00")    frame_id = 11800000;
         when("STD_19:00_20:00")    frame_id = 11900000;
         when("STD_20:00_21:00")    frame_id = 12000000;
         when("STD_21:00_22:00")    frame_id = 12100000;
         when("STD_22:00_23:00")    frame_id = 12200000;
         when("STD_23:00_00:00")    frame_id = 12300000;

         when("STD_00:30_01:30")    frame_id = 10050000;
         when("STD_01:30_02:30")    frame_id = 10150000;
         when("STD_02:30_03:30")    frame_id = 10250000;
         when("STD_03:30_04:30")    frame_id = 10350000;
         when("STD_04:30_05:30")    frame_id = 10450000;
         when("STD_05:30_06:30")    frame_id = 10550000;
         when("STD_06:30_07:30")    frame_id = 10650000;
         when("STD_07:30_08:30")    frame_id = 10750000;
         when("STD_08:30_09:30")    frame_id = 10850000;
         when("STD_09:30_10:30")    frame_id = 10950000;
         when("STD_10:30_11:30")    frame_id = 11050000;
         when("STD_11:30_12:30")    frame_id = 11150000;
         when("STD_12:30_13:30")    frame_id = 11250000;
         when("STD_13:30_14:30")    frame_id = 11350000;
         when("STD_14:30_15:30")    frame_id = 11450000;
         when("STD_15:30_16:30")    frame_id = 11550000;
         when("STD_16:30_17:30")    frame_id = 11650000;
         when("STD_17:30_18:30")    frame_id = 11750000;
         when("STD_18:30_19:30")    frame_id = 11850000;
         when("STD_19:30_20:30")    frame_id = 11950000;
         when("STD_20:30_21:30")    frame_id = 12050000;
         when("STD_21:30_22:30")    frame_id = 12150000;
         when("STD_22:30_23:30")    frame_id = 12250000;
         when("STD_23:30_00:30")    frame_id = 12350000;

         /* Стандартные графики по 2 часа */
         when("STD_00:00_02:00")    frame_id = 20000000;
         when("STD_01:00_03:00")    frame_id = 20100000;
         when("STD_02:00_04:00")    frame_id = 20200000;
         when("STD_03:00_05:00")    frame_id = 20300000;
         when("STD_04:00_06:00")    frame_id = 20400000;
         when("STD_05:00_07:00")    frame_id = 20500000;
         when("STD_06:00_08:00")    frame_id = 20600000;
         when("STD_07:00_09:00")    frame_id = 20700000;
         when("STD_08:00_10:00")    frame_id = 20800000;
         when("STD_09:00_11:00")    frame_id = 20900000;
         when("STD_10:00_12:00")    frame_id = 21000000;
         when("STD_11:00_13:00")    frame_id = 21100000;
         when("STD_12:00_14:00")    frame_id = 21200000;
         when("STD_13:00_15:00")    frame_id = 21300000;
         when("STD_14:00_16:00")    frame_id = 21400000;
         when("STD_15:00_17:00")    frame_id = 21500000;
         when("STD_16:00_18:00")    frame_id = 21600000;
         when("STD_17:00_19:00")    frame_id = 21700000;
         when("STD_18:00_20:00")    frame_id = 21800000;
         when("STD_19:00_21:00")    frame_id = 21900000;
         when("STD_20:00_22:00")    frame_id = 22000000;
         when("STD_21:00_23:00")    frame_id = 22100000;
         when("STD_22:00_00:00")    frame_id = 22200000;
         when("STD_23:00_01:00")    frame_id = 22300000;

         when("STD_00:30_02:30")    frame_id = 20050000;
         when("STD_01:30_03:30")    frame_id = 20150000;
         when("STD_02:30_04:30")    frame_id = 20250000;
         when("STD_03:30_05:30")    frame_id = 20350000;
         when("STD_04:30_06:30")    frame_id = 20450000;
         when("STD_05:30_07:30")    frame_id = 20550000;
         when("STD_06:30_08:30")    frame_id = 20650000;
         when("STD_07:30_09:30")    frame_id = 20750000;
         when("STD_08:30_10:30")    frame_id = 20850000;
         when("STD_09:30_11:30")    frame_id = 20950000;
         when("STD_10:30_12:30")    frame_id = 21050000;
         when("STD_11:30_13:30")    frame_id = 21150000;
         when("STD_12:30_14:30")    frame_id = 21250000;
         when("STD_13:30_15:30")    frame_id = 21350000;
         when("STD_14:30_16:30")    frame_id = 21450000;
         when("STD_15:30_17:30")    frame_id = 21550000;
         when("STD_16:30_18:30")    frame_id = 21650000;
         when("STD_17:30_19:30")    frame_id = 21750000;
         when("STD_18:30_20:30")    frame_id = 21850000;
         when("STD_19:30_21:30")    frame_id = 21950000;
         when("STD_20:30_22:30")    frame_id = 22050000;
         when("STD_21:30_23:30")    frame_id = 22150000;
         when("STD_22:30_00:30")    frame_id = 22250000;
         when("STD_23:30_01:30")    frame_id = 22350000;

         /* Стандартные постоянные графики по 10 минут */
         when("STD_23:00_23:10")    frame_id = 39000000;
         when("STD_23:10_23:20")    frame_id = 39100000;
         when("STD_23:20_23:30")    frame_id = 39200000;
         when("STD_23:30_23:40")    frame_id = 39300000;
         when("STD_23:40_23:50")    frame_id = 39400000;
         when("STD_23:50_00:00")    frame_id = 39500000;
         when("STD_00:00_00:10")    frame_id = 30000000;
         when("STD_00:10_00:20")    frame_id = 30100000;
         when("STD_00:20_00:30")    frame_id = 30200000;
         when("STD_00:30_00:40")    frame_id = 30300000;
         when("STD_00:40_00:50")    frame_id = 30400000;
         when("STD_00:50_01:00")    frame_id = 30500000;
         when("STD_01:00_01:10")    frame_id = 31000000;
         when("STD_01:10_01:20")    frame_id = 31100000;
         when("STD_01:20_01:30")    frame_id = 31200000;
         when("STD_01:30_01:40")    frame_id = 31300000;
         when("STD_01:40_01:50")    frame_id = 31400000;
         when("STD_01:50_02:00")    frame_id = 31500000;
         when("STD_02:00_02:10")    frame_id = 32000000;
         when("STD_02:10_02:20")    frame_id = 32100000;
         when("STD_02:20_02:30")    frame_id = 32200000;
         when("STD_02:30_02:40")    frame_id = 32300000;
         when("STD_02:40_02:50")    frame_id = 32400000;
         when("STD_02:50_03:00")    frame_id = 32500000;
         when("STD_03:00_03:10")    frame_id = 33000000;
         when("STD_03:10_03:20")    frame_id = 33100000;
         when("STD_03:20_03:30")    frame_id = 33200000;
         when("STD_03:30_03:40")    frame_id = 33300000;
         when("STD_03:40_03:50")    frame_id = 33400000;
         when("STD_03:50_04:00")    frame_id = 33500000;
         when("STD_04:00_04:10")    frame_id = 34000000;
         when("STD_04:10_04:20")    frame_id = 34100000;
         when("STD_04:20_04:30")    frame_id = 34200000;
         when("STD_04:30_04:40")    frame_id = 34300000;
         when("STD_04:40_04:50")    frame_id = 34400000;
         when("STD_04:50_05:00")    frame_id = 34500000;

         /* Стандартные графики по 4 часа */
         when("STD_00:00_04:00")    frame_id = 40000000;
         when("STD_01:00_05:00")    frame_id = 40100000;
         when("STD_02:00_06:00")    frame_id = 40200000;
         when("STD_03:00_07:00")    frame_id = 40300000;
         when("STD_04:00_08:00")    frame_id = 40400000;
         when("STD_05:00_09:00")    frame_id = 40500000;
         when("STD_06:00_10:00")    frame_id = 40600000;
         when("STD_07:00_11:00")    frame_id = 40700000;
         when("STD_08:00_12:00")    frame_id = 40800000;
         when("STD_09:00_13:00")    frame_id = 40900000;
         when("STD_10:00_14:00")    frame_id = 41000000;
         when("STD_11:00_15:00")    frame_id = 41100000;
         when("STD_12:00_16:00")    frame_id = 41200000;
         when("STD_13:00_17:00")    frame_id = 41300000;
         when("STD_14:00_18:00")    frame_id = 41400000;
         when("STD_15:00_19:00")    frame_id = 41500000;
         when("STD_16:00_20:00")    frame_id = 41600000;
         when("STD_17:00_21:00")    frame_id = 41700000;
         when("STD_18:00_22:00")    frame_id = 41800000;
         when("STD_19:00_23:00")    frame_id = 41900000;
         when("STD_20:00_00:00")    frame_id = 42000000;
         when("STD_21:00_01:00")    frame_id = 42100000;
         when("STD_22:00_02:00")    frame_id = 42200000;
         when("STD_23:00_03:00")    frame_id = 42300000;

         when("STD_00:30_04:30")    frame_id = 40050000;
         when("STD_01:30_05:30")    frame_id = 40150000;
         when("STD_02:30_06:30")    frame_id = 40250000;
         when("STD_03:30_07:30")    frame_id = 40350000;
         when("STD_04:30_08:30")    frame_id = 40450000;
         when("STD_05:30_09:30")    frame_id = 40550000;
         when("STD_06:30_10:30")    frame_id = 40650000;
         when("STD_07:30_11:30")    frame_id = 40750000;
         when("STD_08:30_12:30")    frame_id = 40850000;
         when("STD_09:30_13:30")    frame_id = 40950000;
         when("STD_10:30_14:30")    frame_id = 41050000;
         when("STD_11:30_15:30")    frame_id = 41150000;
         when("STD_12:30_16:30")    frame_id = 41250000;
         when("STD_13:30_17:30")    frame_id = 41350000;
         when("STD_14:30_18:30")    frame_id = 41450000;
         when("STD_15:30_19:30")    frame_id = 41550000;
         when("STD_16:30_20:30")    frame_id = 41650000;
         when("STD_17:30_21:30")    frame_id = 41750000;
         when("STD_18:30_22:30")    frame_id = 41850000;
         when("STD_19:30_23:30")    frame_id = 41950000;
         when("STD_20:30_00:30")    frame_id = 42050000;
         when("STD_21:30_01:30")    frame_id = 42150000;
         when("STD_22:30_02:30")    frame_id = 42250000;
         when("STD_23:30_03:30")    frame_id = 42350000;

         when("DAY")                frame_id = 50000000;

         when("WEEK_MON")           frame_id = 51000000;
         when("WEEK_TUE")           frame_id = 52000000;

         /* Графики витрин */
         /*when("DM_MON")             frame_id = 51000000;*/
      end;
   end;

   frame_id + 1;
run;

/*---- End of User Written Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/** Step end User Written **/

/*==========================================================================* 
 * Step:            Create Table                          A5VLIHEZ.BT00009N * 
 * Transform:       Create Table                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    User Written - work.W2DRTP6G          A5VLIHEZ.BV00003J * 
 * Target Table:    TMP_SCHEDULE_FRAME -                  A5VLIHEZ.BM000052 * 
 *                   etl_sys.TMP_SCHEDULE_FRAME                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009N);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W2DRTP6G); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

proc datasets lib = etl_sys nolist nowarn memtype = (data view);
   delete TMP_SCHEDULE_FRAME;
quit;

proc sql
;
create table etl_sys.TMP_SCHEDULE_FRAME as
select
   W2DRTP6G.FRAME_ID length = 8   
      label = 'FRAME_ID',
   W2DRTP6G.SCHEDULE_CD length = 20   
      format = $20.
      informat = $20.
      label = 'SCHEDULE_CD',
   W2DRTP6G.OPEN_DTTM length = 8   
      format = DATETIME20.
      informat = DATETIME20.
      label = 'OPEN_DTTM',
   W2DRTP6G.CLOSE_DTTM length = 8   
      format = DATETIME20.
      informat = DATETIME20.
      label = 'CLOSE_DTTM'
from
   work.W2DRTP6G as W2DRTP6G
;
quit;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/** Step end Create Table **/

/*---- Start of User Written Code  ----*/ 

/*==========================================================================* 
 * Step:            Merge                                 A5C8TEWR.AY000057 * 
 * Transform:       Merge                                                   * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    TMP_SCHEDULE_FRAME -                  A5C8TEWR.AH00000R * 
 *                   etl_sys.TMP_SCHEDULE_FRAME                             * 
 * Target Table:    ETL_SCHEDULE_FRAME -                  A5C8TEWR.AH00000L * 
 *                   etl_sys.ETL_SCHEDULE_FRAME                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5C8TEWR.AY000057);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_sys.TMP_SCHEDULE_FRAME); 

%macro etls_sql_merge;

/* Determine if the table exists  */ 
%let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_SCHEDULE_FRAME, DATA)) or 
      %sysfunc(exist(etl_sys.ETL_SCHEDULE_FRAME, VIEW))); 

/*---- Create a new table  ----*/ 
%if (&etls_tableExist eq 0) %then 
%do;  /* if table does not exist  */ 

   %put %str(NOTE: Creating table ...);
   
   data etl_sys.ETL_SCHEDULE_FRAME
           (dbnull = (
                      FRAME_ID = NO
                      SCHEDULE_CD = NO
                      OPEN_DTTM = NO
                      CLOSE_DTTM = NO));
      attrib FRAME_ID length = 8
         label = 'FRAME_ID'; 
      attrib SCHEDULE_CD length = $20
         format = $20.
         informat = $20.
         label = 'SCHEDULE_CD'; 
      attrib OPEN_DTTM length = 8
         format = DATETIME20.
         informat = DATETIME20.
         label = 'OPEN_DTTM'; 
      attrib CLOSE_DTTM length = 8
         format = DATETIME20.
         informat = DATETIME20.
         label = 'CLOSE_DTTM'; 
      call missing(of _all_);
      stop;
   run;
   
   %rcSet(&syserr); 
   
   /*---- Create the integrity constraints for a table  ----*/ 
   %put %str(NOTE: Creating integrity constraints ...);
   proc sql;
      connect to ORACLE
      ( 
          PATH=DWHTK01 AUTHDOMAIN="DwhAuth_ETL_SYS" 
      ); 
      reset noprint; 
      
      execute 
      ( 
         alter table ETL_SYS.ETL_SCHEDULE_FRAME      
            add primary key (FRAME_ID)
            add foreign key (SCHEDULE_CD) references ETL_SYS.ETL_SCHEDULE
      ) by ORACLE; 
      
      %rcSet(&sqlrc); 
      
      disconnect from ORACLE; 
   quit;
   
   %rcSet(&sqlrc); 
   
%end;  /* if table does not exist  */ 

/*---- Update the target table  ----*/ 
proc sql;
   connect to ORACLE
   ( 
       &ETL_SYS_CONNECT_OPTIONS. 
   ); 
   execute 
   ( 
      MERGE INTO
         ETL_SYS.ETL_SCHEDULE_FRAME
      USING
         ETL_SYS.TMP_SCHEDULE_FRAME
      ON
         (
            TMP_SCHEDULE_FRAME.FRAME_ID = ETL_SCHEDULE_FRAME.FRAME_ID
         )
      WHEN MATCHED THEN UPDATE
         set 
            ETL_SCHEDULE_FRAME.SCHEDULE_CD= TMP_SCHEDULE_FRAME.SCHEDULE_CD,
            ETL_SCHEDULE_FRAME.OPEN_DTTM= TMP_SCHEDULE_FRAME.OPEN_DTTM,
            ETL_SCHEDULE_FRAME.CLOSE_DTTM= TMP_SCHEDULE_FRAME.CLOSE_DTTM
      WHEN NOT MATCHED THEN INSERT
         (
            ETL_SCHEDULE_FRAME.FRAME_ID,
            ETL_SCHEDULE_FRAME.SCHEDULE_CD,
            ETL_SCHEDULE_FRAME.OPEN_DTTM,
            ETL_SCHEDULE_FRAME.CLOSE_DTTM
         )
         values
         (   
            TMP_SCHEDULE_FRAME.FRAME_ID,
            TMP_SCHEDULE_FRAME.SCHEDULE_CD,
            TMP_SCHEDULE_FRAME.OPEN_DTTM,
            TMP_SCHEDULE_FRAME.CLOSE_DTTM
         )
   ) by ORACLE; 
   
   %rcSet(&sqlrc); 
   
   disconnect from ORACLE; 
   
quit;

%rcSet(&syscc); 


%mend etls_sql_merge;

/* execute etls_sql_merge  */ 
%etls_sql_merge;

%rcSet(&syscc); 



/**  Step end Merge **/


/*---- End of User Written Code  ----*/ 

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009Q * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009Q);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_7_Setup_ETL_SCHEDULE_FRAME **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_8_Setup_ETL_MODULE_X_RULE     A5VLIHEZ.BS00002Q * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_MODULE_X_RULE.csv -               A5VLIHEZ.BZ00000B * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_M                     * 
 *                  ODULE_X_RULE.csv                                        * 
 * Target Table:    ETL_MODULE_X_RULE -                   A5VLIHEZ.BM00004L * 
 *                   etl_sys.ETL_MODULE_X_RULE                              * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002Q);
%let etls_jobName = %nrquote(001_200_8_Setup_ETL_MODULE_X_RULE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009R * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009R);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT00009S * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_MODULE_X_RULE.csv -               A5VLIHEZ.BZ00000B * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_M                     * 
 *                  ODULE_X_RULE.csv                                        * 
 * Target Table:    File Reader - work.WEGRABT            A5VLIHEZ.BV00003K * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009S);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete etls_WEGRABT;
quit;

data work.etls_WEGRABT / view = work.etls_WEGRABT ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_MODULE_X_RULE.csv"
          lrecl = 1024
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib MODULE_ID length = 8; 
   attrib STATE_CD length = $3
      format = $3.
      informat = $3.; 
   attrib FILTER_BY_GROUP length = $100
      format = $100.
      informat = $100.; 
   attrib FILTER_SCHEDULE_CD length = $20
      format = $20.
      informat = $20.; 
   attrib FILTER_RESOURCE_GROUP_CD length = $32
      format = $32.
      informat = $32.; 
   attrib FILTER_RESOURCE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib FILTER_STATUS_CD length = $32
      format = $32.
      informat = $32.; 
   attrib FILTER_EXTRA_TXT length = $100
      format = $100.
      informat = $100.; 
   attrib NEXT_STATE_CD length = $3
      format = $3.
      informat = $3.; 
   attrib ELSE_STATE_CD length = $3
      format = $3.
      informat = $3.; 
   
   input MODULE_ID STATE_CD FILTER_BY_GROUP FILTER_SCHEDULE_CD 
         FILTER_RESOURCE_GROUP_CD FILTER_RESOURCE_CD FILTER_STATUS_CD 
         FILTER_EXTRA_TXT NEXT_STATE_CD ELSE_STATE_CD; 
   
run; 

%rcSet(&syserr); 

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WEGRABT;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WEGRABT as
      select
         MODULE_ID,
         STATE_CD,
         FILTER_BY_GROUP,
         FILTER_SCHEDULE_CD,
         FILTER_RESOURCE_GROUP_CD,
         FILTER_RESOURCE_CD,
         FILTER_STATUS_CD,
         FILTER_EXTRA_TXT length = 200   
            format = $200.
            informat = $200.,
         NEXT_STATE_CD,
         ELSE_STATE_CD
   from work.etls_WEGRABT
   ;
quit;

%let SYSLAST = work.WEGRABT;



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Значения по умолчанию                 A5VLIHEZ.BT00009T * 
 * Transform:       Extract                                                 * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.WEGRABT            A5VLIHEZ.BV00003K * 
 * Target Table:    Extract - work.WEGT7ML                A5VLIHEZ.BV00003L * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009T);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WEGRABT); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

/*---- Map the columns  ----*/ 
proc datasets lib = work nolist nowarn memtype = (data view);
   delete WEGT7ML;
quit;

%put %str(NOTE: Mapping columns ...);
proc sql;
   create view work.WEGT7ML as
      select
         (monotonic()) as RULE_ID length = 8
            label = 'RULE_ID',
         MODULE_ID,
         STATE_CD,
         FILTER_BY_GROUP,
         FILTER_SCHEDULE_CD,
         FILTER_RESOURCE_GROUP_CD,
         FILTER_RESOURCE_CD,
         FILTER_STATUS_CD,
         FILTER_EXTRA_TXT,
         NEXT_STATE_CD,
         (coalesce(ELSE_STATE_CD, "R")) as ELSE_STATE_CD length = 3
            format = $3.
            informat = $3.
            label = 'ELSE_STATE_CD'
   from &SYSLAST
      where not missing(MODULE_ID)
   ;
quit;

%let SYSLAST = work.WEGT7ML;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/** Step end Значения по умолчанию **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00009U * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    Extract - work.WEGT7ML                A5VLIHEZ.BV00003L * 
 * Target Table:    ETL_MODULE_X_RULE -                   A5VLIHEZ.BM00004L * 
 *                   etl_sys.ETL_MODULE_X_RULE                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009U);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WEGT7ML); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'ASIS','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEEBMHF;
   quit;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WEEBMHF as
         select
            RULE_ID,
            MODULE_ID,
            STATE_CD,
            FILTER_BY_GROUP,
            FILTER_SCHEDULE_CD,
            FILTER_RESOURCE_GROUP_CD,
            FILTER_RESOURCE_CD length = 100   
               format = $100.
               informat = $100.,
            FILTER_STATUS_CD,
            FILTER_EXTRA_TXT,
            NEXT_STATE_CD,
            ELSE_STATE_CD
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WEEBMHF;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_MODULE_X_RULE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_MODULE_X_RULE, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_MODULE_X_RULE
              (dbnull = (
                         RULE_ID = NO
                         MODULE_ID = NO
                         STATE_CD = NO
                         FILTER_BY_GROUP = YES
                         FILTER_SCHEDULE_CD = YES
                         FILTER_RESOURCE_GROUP_CD = YES
                         FILTER_RESOURCE_CD = YES
                         FILTER_STATUS_CD = YES
                         FILTER_EXTRA_TXT = YES
                         NEXT_STATE_CD = NO
                         ELSE_STATE_CD = NO));
         attrib RULE_ID length = 8
            label = 'RULE_ID'; 
         attrib MODULE_ID length = 8
            label = 'MODULE_ID'; 
         attrib STATE_CD length = $3
            format = $3.
            informat = $3.
            label = 'STATE_CD'; 
         attrib FILTER_BY_GROUP length = $100
            format = $100.
            informat = $100.
            label = 'FILTER_BY_GROUP'; 
         attrib FILTER_SCHEDULE_CD length = $20
            format = $20.
            informat = $20.
            label = 'FILTER_SCHEDULE_CD'; 
         attrib FILTER_RESOURCE_GROUP_CD length = $32
            format = $32.
            informat = $32.
            label = 'FILTER_RESOURCE_GROUP_CD'; 
         attrib FILTER_RESOURCE_CD length = $100
            format = $100.
            informat = $100.
            label = 'FILTER_RESOURCE_CD'; 
         attrib FILTER_STATUS_CD length = $32
            format = $32.
            informat = $32.
            label = 'FILTER_STATUS_CD'; 
         attrib FILTER_EXTRA_TXT length = $200
            format = $200.
            informat = $200.
            label = 'FILTER_EXTRA_TXT'; 
         attrib NEXT_STATE_CD length = $3
            format = $3.
            informat = $3.
            label = 'NEXT_STATE_CD'; 
         attrib ELSE_STATE_CD length = $3
            format = $3.
            informat = $3.
            label = 'ELSE_STATE_CD'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_SYS.ETL_MODULE_X_RULE
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_MODULE_X_RULE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEEBMHF;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009V * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009V);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_8_Setup_ETL_MODULE_X_RULE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/**************************************************************************** 
 * Job:             001_200_9_Setup_Build_Formats_Schedu  A5VLIHEZ.BS00002R * 
 *                  ler                                                     * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_200_Setup_Scheduler                   * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:20:33 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002R);
%let etls_jobName = %nrquote(001_200_9_Setup_Build_Formats_Scheduler);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009W * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009W);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Обновление группы форматов            A5VLIHEZ.BT00009X * 
 * Transform:       Обновление группы форматов                              * 
 * Description:     Создает (перестраивает) группу форматов                 * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009X);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let tpFmtGroup = %nrquote(001_200_Setup_Scheduler         );
%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_format_group_gen.sas 2947:dfe3d214f2e2 2014-05-20 11:26:53Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Обновляет группу форматов (ETL_FORMAT).
*
*  ПАРАМЕТРЫ:
*     tpFmtGroup              +  имя группы форматов
*
******************************************************************/

%macro transform_format_group_gen;
   %if &tpFmtGroup ne _ALL_VALUES_ %then %do;
      %format_gen (mpFmtGroup=&tpFmtGroup);
   %end;
   %else %do;
      %format_gen;
   %end;
%mend transform_format_group_gen;

%transform_format_group_gen;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Обновление группы форматов **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00009Y * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009Y);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_200_9_Setup_Build_Formats_Scheduler **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000035);
%let etls_jobName = %nrquote(001_200_Setup_Scheduler);

/*==========================================================================* 
 * Step:            Завершить поток                       A5VLIHEZ.BT00007D * 
 * Transform:       Завершить поток                                         * 
 * Description:     Закрывает поток загрузки                                * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_stream_finish.sas 3629:0a610733da87 2014-12-22 12:21:10Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует конец потока ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_stream_finish;
   %etl_stream_finish;
%mend transform_stream_finish;

%transform_stream_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить поток **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

