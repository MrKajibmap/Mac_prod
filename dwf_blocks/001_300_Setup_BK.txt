/**************************************************************************** 
 * Job:             001_300_Setup_BK                      A5VLIHEZ.BS000036 * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Blocks/001_Setup                               * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:21:24 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS000036);
%let etls_jobName = %nrquote(001_300_Setup_BK);
%let etls_userID = %nrquote(sasmi);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */ 
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать поток                          A5VLIHEZ.BT00007E * 
 * Transform:       Начать поток                                            * 
 * Description:     Открывает поток загрузки                                * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007E);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_stream_start.sas 3629:0a610733da87 2014-12-22 12:21:10Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало потока ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_stream_start;
   %etl_stream_start;
%mend transform_stream_start;

%transform_stream_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать поток **/

/**************************************************************************** 
 * Job:             001_300_1_Setup_ETL_BK_TYPE           A5VLIHEZ.BS00002S * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_300_Setup_BK                          * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_BK_TYPE.csv -                     A5VLIHEZ.BZ000005 * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_B                     * 
 *                  K_TYPE.csv                                              * 
 * Target Table:    ETL_BK_TYPE - etl_sys.ETL_BK_TYPE     A5VLIHEZ.BM00004B * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:21:24 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002S);
%let etls_jobName = %nrquote(001_300_1_Setup_ETL_BK_TYPE);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00009Z * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00009Z);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT0000A0 * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_BK_TYPE.csv -                     A5VLIHEZ.BZ000005 * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_B                     * 
 *                  K_TYPE.csv                                              * 
 * Target Table:    File Reader - work.WCA0P5EM           A5VLIHEZ.BV00003M * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A0);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete WCA0P5EM;
quit;

data work.WCA0P5EM / view = work.WCA0P5EM ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_BK_TYPE.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib BK_TYPE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib BK_LENGTH length = 8
      format = 21.
      informat = 21.; 
   attrib BK_TYPE_FORMAT_TXT length = $100
      format = $100.
      informat = $100.; 
   
   input BK_TYPE_CD BK_LENGTH BK_TYPE_FORMAT_TXT; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT0000A1 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.WCA0P5EM           A5VLIHEZ.BV00003M * 
 * Target Table:    ETL_BK_TYPE - etl_sys.ETL_BK_TYPE     A5VLIHEZ.BM00004B * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A1);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.WCA0P5EM); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_BK_TYPE, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_BK_TYPE, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_BK_TYPE
              (dbnull = (
                         BK_TYPE_CD = NO
                         BK_LENGTH = NO
                         BK_TYPE_FORMAT_TXT = NO));
         attrib BK_TYPE_CD length = $32
            format = $32.
            informat = $32.
            label = 'BK_TYPE_CD'; 
         attrib BK_LENGTH length = 8
            label = 'BK_LENGTH'; 
         attrib BK_TYPE_FORMAT_TXT length = $100
            format = $100.
            informat = $100.
            label = 'BK_TYPE_FORMAT_TXT'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.ETL_BK_TYPE      
               add primary key (BK_TYPE_CD)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_BK_TYPE, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_BK_TYPE, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_BK_TYPE( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_BK_TYPE as m
            set BK_LENGTH = (select BK_LENGTH from &etls_lastTable as t 
                                where m.BK_TYPE_CD = t.BK_TYPE_CD),
                   BK_TYPE_FORMAT_TXT = (select BK_TYPE_FORMAT_TXT from &etls_lastTable as t 
                                where m.BK_TYPE_CD = t.BK_TYPE_CD)
               where exists (select * from &etls_lastTable as t
                                   where m.BK_TYPE_CD = t.BK_TYPE_CD);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_BK_TYPE
                   as m 
                                      where m.BK_TYPE_CD = t.BK_TYPE_CD)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_BK_TYPE 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT0000A2 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A2);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_300_1_Setup_ETL_BK_TYPE **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000036);
%let etls_jobName = %nrquote(001_300_Setup_BK);

/**************************************************************************** 
 * Job:             001_300_2_Setup_ETL_BK                A5VLIHEZ.BS00002T * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_300_Setup_BK                          * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Table:    ETL_BK.csv -                          A5VLIHEZ.BZ000004 * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_B                     * 
 *                  K.csv                                                   * 
 * Target Table:    ETL_BK - etl_sys.ETL_BK               A5VLIHEZ.BM00004A * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:21:24 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002T);
%let etls_jobName = %nrquote(001_300_2_Setup_ETL_BK);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT0000A3 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A3);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            File Reader                           A5VLIHEZ.BT0000A4 * 
 * Transform:       File Reader                                             * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    ETL_BK.csv -                          A5VLIHEZ.BZ000004 * 
 *                  &ETL_FILE_STATIC_ROOT/etl_sys/ETL_B                     * 
 *                  K.csv                                                   * 
 * Target Table:    File Reader - work.W6DWC90H           A5VLIHEZ.BV00003N * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A4);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W6DWC90H;
quit;

data work.W6DWC90H / view = work.W6DWC90H ; 
   infile "&ETL_FILE_STATIC_ROOT/etl_sys/ETL_BK.csv"
          lrecl = 256
          delimiter = ';'
          dsd
          missover
          firstobs = 2
          encoding = "utf8"; 
   ; 
   attrib BK_CD length = $32
      format = $32.
      informat = $32.; 
   attrib BK_TYPE_CD length = $32
      format = $32.
      informat = $32.; 
   attrib BK_FIELD_NM length = $32
      format = $32.
      informat = $32.; 
   attrib BK_FORMAT_TXT length = $100
      format = $100.
      informat = $100.; 
   attrib BK_COLUMN_LIST_TXT length = $200
      format = $200.
      informat = $200.; 
   
   input BK_CD BK_TYPE_CD BK_FIELD_NM BK_FORMAT_TXT BK_COLUMN_LIST_TXT; 
   
run; 

%rcSet(&syserr); 



/** Step end File Reader **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT0000A5 * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    File Reader - work.W6DWC90H           A5VLIHEZ.BV00003N * 
 * Target Table:    ETL_BK - etl_sys.ETL_BK               A5VLIHEZ.BM00004A * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A5);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W6DWC90H); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Update - Matching=SQLSet, New=AppendProc
   Blanks may replace non-blanks: true
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_BK, DATA)) or 
         %sysfunc(exist(etl_sys.ETL_BK, VIEW))); 
   
   %let etls_hasUpdateIndex=0; 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.ETL_BK
              (dbnull = (
                         BK_CD = NO
                         BK_TYPE_CD = NO
                         BK_FIELD_NM = NO
                         BK_FORMAT_TXT = NO
                         BK_COLUMN_LIST_TXT = NO));
         attrib BK_CD length = $32
            format = $32.
            informat = $32.
            label = 'BK_CD'; 
         attrib BK_TYPE_CD length = $32
            format = $32.
            informat = $32.
            label = 'BK_TYPE_CD'; 
         attrib BK_FIELD_NM length = $32
            format = $32.
            informat = $32.
            label = 'BK_FIELD_NM'; 
         attrib BK_FORMAT_TXT length = $100
            format = $100.
            informat = $100.
            label = 'BK_FORMAT_TXT'; 
         attrib BK_COLUMN_LIST_TXT length = $200
            format = $200.
            informat = $200.
            label = 'BK_COLUMN_LIST_TXT'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.ETL_BK      
               add primary key (BK_CD)
               add foreign key (BK_TYPE_CD) references ETL_SYS.ETL_BK_TYPE
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %let etls_recCheckExist = 0; 
   %let etls_targetHasRows = 0; 
   %macro etls_recordCheck; 
      %let etls_recCheckExist = %eval(%sysfunc(exist(etl_sys.ETL_BK, DATA)) or 
            %sysfunc(exist(etl_sys.ETL_BK, VIEW))); 
      
      %if (&etls_recCheckExist) %then
      %do;
         %local etls_syntaxcheck; 
         %let etls_syntaxcheck = %sysfunc(getoption(syntaxcheck)); 
         /* Turn off syntaxcheck option to perform following steps  */ 
         options nosyntaxcheck;
         
         data _null_; 
            set etl_sys.ETL_BK( obs=1 ); 
            call symput("etls_targetHasRows",'1'); 
         run; 
         /* Reset syntaxcheck option to previous setting  */ 
         options &etls_syntaxcheck; 
      %end;
   %mend etls_recordCheck;
   %etls_recordCheck;
   
   
   %if (&etls_targetHasRows) %then 
   %do;  /* if has rows */ 
      proc sql ; 
         /* update existing records in the master table  */ 
         update etl_sys.ETL_BK as m
            set BK_TYPE_CD = (select BK_TYPE_CD from &etls_lastTable as t 
                                where m.BK_CD = t.BK_CD),
                   BK_FIELD_NM = (select BK_FIELD_NM from &etls_lastTable as t 
                                where m.BK_CD = t.BK_CD),
                   BK_FORMAT_TXT = (select BK_FORMAT_TXT from &etls_lastTable as t 
                                where m.BK_CD = t.BK_CD),
                   BK_COLUMN_LIST_TXT = (select BK_COLUMN_LIST_TXT from &etls_lastTable as t 
                                where m.BK_CD = t.BK_CD)
               where exists (select * from &etls_lastTable as t
                                   where m.BK_CD = t.BK_CD);
         
         /* create a temporary table of new records from the transaction table  */ 
         create table etls_newrecords as 
            select * 
               from &etls_lastTable as t 
                  where not exists 
                     (select * from etl_sys.ETL_BK
                   as m 
                                      where m.BK_CD = t.BK_CD)
         ; 
         
      quit;
      
      %let etls_lastTable = &SYSLAST;
      
      %let etls_tableOptions = ; 
      
      %global etls_sql_pushDown;
      %let etls_sql_pushDown = &sys_sql_ip_all;
      
      %rcSet(&sqlrc); 
      
   %end; /* if has rows */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.ETL_BK 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete etls_newrecords;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT0000A6 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A6);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_300_2_Setup_ETL_BK **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000036);
%let etls_jobName = %nrquote(001_300_Setup_BK);

/**************************************************************************** 
 * Job:             001_300_3_Setup_Build_Formats_BK      A5VLIHEZ.BS00002U * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Jobs/001_300_Setup_BK                          * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:21:25 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00002U);
%let etls_jobName = %nrquote(001_300_3_Setup_Build_Formats_BK);
%let etls_userID = %nrquote(sasmi);


/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT0000A7 * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A7);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Обновление группы форматов            A5VLIHEZ.BT0000A8 * 
 * Transform:       Обновление группы форматов                              * 
 * Description:     Создает (перестраивает) группу форматов                 * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A8);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let tpFmtGroup = %nrquote(001_300_Setup_BK                                                                                                                );
%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_format_group_gen.sas 2947:dfe3d214f2e2 2014-05-20 11:26:53Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Обновляет группу форматов (ETL_FORMAT).
*
*  ПАРАМЕТРЫ:
*     tpFmtGroup              +  имя группы форматов
*
******************************************************************/

%macro transform_format_group_gen;
   %if &tpFmtGroup ne _ALL_VALUES_ %then %do;
      %format_gen (mpFmtGroup=&tpFmtGroup);
   %end;
   %else %do;
      %format_gen;
   %end;
%mend transform_format_group_gen;

%transform_format_group_gen;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Обновление группы форматов **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT0000A9 * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT0000A9);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);



/**  Job end 001_300_3_Setup_Build_Formats_BK **/

/* Reset jobid and name */
%let jobID = %quote(A5VLIHEZ.BS000036);
%let etls_jobName = %nrquote(001_300_Setup_BK);

/*==========================================================================* 
 * Step:            Завершить поток                       A5VLIHEZ.BT00007I * 
 * Transform:       Завершить поток                                         * 
 * Description:     Закрывает поток загрузки                                * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007I);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_stream_finish.sas 3629:0a610733da87 2014-12-22 12:21:10Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует конец потока ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_stream_finish;
   %etl_stream_finish;
%mend transform_stream_finish;

%transform_stream_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить поток **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

