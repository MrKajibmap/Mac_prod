005_099_Stream_Finish/**************************************************************************** 
 * Job:             007_101_Cleanup_Stage                 A5VLIHEZ.BS00003A * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Blocks/007_Administer                          * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Tables:   VTABLE - sashelp.VTABLE               A5VLIHEZ.BM000053 * 
 *                  ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
 *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:28:40 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00003A);
%let etls_jobName = %nrquote(007_101_Cleanup_Stage);
%let etls_userID = %nrquote(sasmi);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */ 
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00007T * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007T);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            SQL Join                              A5VLIHEZ.BT00007U * 
 * Transform:       Join                                                    * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Tables:   VTABLE - sashelp.VTABLE               A5VLIHEZ.BM000053 * 
 *                  ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
 *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
 * Target Table:    SQL Join - work.W6OVNW0K              A5VLIHEZ.BV000033 * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007U);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

proc datasets lib = work nolist nowarn memtype = (data view);
   delete W6OVNW0K;
quit;

proc sql;
   create table work.W6OVNW0K as
   select distinct
      ETL_RESOURCE_X_ARCH.ARCH_NM length = 32   
         format = $32.
         informat = $32.
         label = 'TABLE_NM'
   from
      etl_sys.ETL_RESOURCE_X_ARCH as ETL_RESOURCE_X_ARCH inner join 
      sashelp.VTABLE
         on
         (
            VTABLE.libname = "ETL_STG"
            and ETL_RESOURCE_X_ARCH.ARCH_NM = VTABLE.memname
            and VTABLE.memtype = 'DATA'
         )
   ;
quit;

%global etls_sql_pushDown;
%let etls_sql_pushDown = &sys_sql_ip_all;

%rcSet(&sqlrc); 



/** Step end SQL Join **/

/*==========================================================================* 
 * Step:            Loop                                  A5VLIHEZ.BT00007V * 
 * Transform:       Loop                                                    * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    SQL Join - work.W6OVNW0K              A5VLIHEZ.BV000033 * 
 * Target Table:    Loop - work.W6P4JRG0                  A5VLIHEZ.BV000034 * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007V);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W6OVNW0K); 

%macro etls_getHandle(statusTable=, handleVariable=, row=); 
   %let etls_dsid = %sysfunc(open(&statusTable)); 
   %if (&etls_dsid = 0) %then 
      %put %sysfunc(sysmsg()); 
   %else 
   %do; 
      %let rc = %sysfunc(fetchobs(&etls_dsid, &row)); 
      %if (&rc ne 0) %then 
         %put %sysfunc(sysmsg()); 
      %else 
      %do; 
         %let etls_varnum = %sysfunc(varnum(&etls_dsid,&handleVariable)); 
         %if (&etls_varnum > 0) %then 
            %sysfunc(getvarc(&etls_dsid,&etls_varnum)); 
         %else 
            %put %sysfunc(sysmsg()); 
      %end; 
      %let rc = %sysfunc(close(&etls_dsid)); 
   %end; 
%mend etls_getHandle; 

%macro etls_freeHandle(statusTable=, statusVariable=, handleVariable=, 
   handleName=, statusSetting="Finished", 
   endTimeVariable=endTime, startTimeVariable=startTime, signoff=1, 
   returnCodeVariable=, returnCodeMacroVariable=, setMainJobRC=1, 
   statusUnknownReturnCode=., startTimeMacroVariable=, endTimeMacroVariable= ); 

   %if (&statusTable ne ) %then 
   %do; 
      %local etls_rcMacroVarExisted; 
      %let etls_rcMacroVarExisted = 0; 
      %if ("&returnCodeMacroVariable" ne "") %then 
      %do; 
         proc sql noprint; 
            select '1' into: etls_rcMacroVarExisted from dictionary.macros 
            where name=kupcase("&returnCodeMacroVariable"); 
         quit; 

         %rcSet(&sqlrc); 
         %if (&etls_rcMacroVarExisted = 0) %then 
         %do; 
            %put WARNING%QUOTE(:) Return code from inner job not found.  Setting status to Unknown.;
            %let &returnCodeMacroVariable=&statusUnknownReturnCode; 
         %end; 
         %if (&setMainJobRC eq 1) %then 
            %rcSet(&&&returnCodeMacroVariable); 
      %end; 
      %else 
      %do; 
         %let returnCodeMacroVariable=etls_rcmacvar; 
         %let &returnCodeMacroVariable=&statusUnknownReturnCode; 
      %end; 

      %local etls_startTimeMacroVarExisted; 
      %let etls_startTimeMacroVarExisted = 0; 
      %if ("&startTimeMacroVariable" ne "") %then 
      %do; 
         proc sql noprint; 
            select '1' into: etls_startTimeMacroVarExisted from dictionary.macros 
            where name=kupcase("&startTimeMacroVariable"); 
         quit; 

         %rcSet(&sqlrc); 
         %if (&etls_startTimeMacroVarExisted = 0) %then 
         %do; 
            %put WARNING%QUOTE(:) Start time from inner job not found.  No value will be set.;
            %let &startTimeMacroVariable=; 
         %end; 
      %end; 

      %local etls_endTimeMacroVarExisted; 
      %let etls_endTimeMacroVarExisted = 0; 
      %if ("&endTimeMacroVariable" ne "") %then 
      %do; 
         proc sql noprint; 
            select '1' into: etls_endTimeMacroVarExisted from dictionary.macros 
            where name=kupcase("&endTimeMacroVariable"); 
         quit; 

         %rcSet(&sqlrc); 
         %if (&etls_endTimeMacroVarExisted = 0) %then 
         %do; 
            %put WARNING%QUOTE(:) End time from inner job not found.  Setting end time to current
      time.;
            %let &endTimeMacroVariable=%sysfunc(datetime()); 
         %end; 
      %end; 

      data &statusTable; 
         modify &statusTable(where=(&handleVariable = &handleName)); 
         %if ("&startTimeMacroVariable" ne "") %then 
         %do; 
            &startTimeVariable = input(symget("&startTimeMacroVariable"),32.);; 
         %end; 
         %if ("&endTimeVariable" ne "") %then 
         %do; 
            %if ("&endTimeMacroVariable" ne "") %then 
            %do; 
               &endTimeVariable = input(symget("&endTimeMacroVariable"),32.);; 
            %end; 
            %else 
               &endTimeVariable = datetime();; 
         %end; 
         %if ("&returnCodeVariable" ne "") %then 
            &returnCodeVariable = input(symget("&returnCodeMacroVariable"),32.);; 
         %if ("&statusVariable" ne "") %then 
         %do; 
            if (symget("etls_rcMacroVarExisted") eq "0") then 
               &statusVariable = "Unknown Status"; 
            else
               &statusVariable = &statusSetting;
         %end;
         call symput('handle',&handleVariable); 
         replace; 
         stop; 
      run; 

      %rcSet(&syserr); 

      %if (&signoff eq 1) %then 
         %etls_signoff(handleName=&handle); 
   %end; 
%mend etls_freeHandle; 

%macro etls_createHandle(statusTable=,
                         statusVariable=,
                         handleVariable=,
                         handlePrefix=rmt,
                         gridOptionSet=,
                         workloadMacroVariable=,
                         row=,
                         machineVariable=,
                         statusSetting="Running", 
                         startTimeVariable=startTime,
                         signon=1,
                         useGrid=1,
                         log=,
                         output=,
                         gridRC=,
                         cmacvar=etls_signonStatus,
                         additionalSignonOptions=,
                         signonRetries= ); 

   %local remoteSessionId; 
   %let remoteSessionId = &handlePrefix.&row; 
   %let &cmacvar = 1; 
   %local etls_machineId; 
   %if (&signon eq 1) %then 

      %etls_signon(handleName=&remoteSessionId,
                   useGrid=&useGrid,
                   machineIdMacroVariable=etls_machineId,
                   gridOptionSet=&etls_gridOptionSet,
                   workloadMacroVariable=&workloadMacroVariable,
                   log=&log,
                   output=&output,
                   cmacvar=&cmacvar,
                   gridRC=&gridRC,
                   additionalSignonOptions=&additionalSignonOptions,
					signonRetries=&signonRetries,
                   gridJobName=DIS_&etls_jobName._&row); 

   %else %let &cmacvar=0; 

   data &statusTable; 
      retain ptr &row; 
      modify &statusTable point = ptr; 
      &handleVariable = "&remoteSessionId"; 
      %if (&signon eq 1) %then 
         &machineVariable = "&etls_machineId";; 
      %if (&&&cmacvar ne 0) %then 
      %do; 
         &statusVariable = "Failed Signon"; 
      %end; 
      %else 
         &statusVariable = &statusSetting;; 
      %if (&startTimeVariable ne ) %then 
         &startTimeVariable = datetime();; 
      replace; 
      stop; 
   run; 

   %rcSet(&syserr); 
%mend etls_createHandle; 

%macro etls_getParameterNames(parameterTable=, parameterVariableMacro=, startingColumnNumber=1);
   %let &parameterVariableMacro = ;
   %let dsid = %sysfunc(open(&parameterTable));
   %if (&dsid gt 0) %then 
   %do; 
      %do i=&startingColumnNumber %to %sysfunc(attrn(&dsid,nvars)); 
         %let &parameterVariableMacro = &&&parameterVariableMacro %sysfunc(varname(&dsid,&i)); 
      %end; 
      %let dsid = %sysfunc(close(&dsid)); 
   %end; 
   %else 
      %put %sysfunc(sysmsg()); 
   %rcSet(&syserr); 
%mend etls_getParameterNames; 

%macro etls_getParameters(parameterTable=, row=, startingColumnNumber=1 , handleName=); 
   data _null_; 
      length vname $256 vtype $1 value $32767; 
      dsid = open("&parameterTable"); 
      if (dsid > 0) then 
      do; 
         do _i = 1 to &row; 
            fetchrc = fetch(dsid); 
         end; 
         do _i=&startingColumnNumber to attrn(dsid,'nvars'); 
            vname = varname(dsid,_i); 
            vtype = vartype(dsid,_i); 
            if (fetchrc = 0) then 
            do; 
               if (vtype = 'C') then 
               do; 
                  value = getvarc(dsid,_i); 
                  value = tranwrd(value,"%","%%"); 
                  value = tranwrd(value,"(","%("); 
                  value = tranwrd(value,")","%)"); 
                  value = tranwrd(value,'"','%"'); 
                  value = tranwrd(value,"'","%'"); 
               end; 
               else 
                  value = left(put(getvarn(dsid,_i),best32.)); 
            end; /* fetchrc = 0 */ 
            
            put ;
            if kindexc(trimn(value),"+-*/<>=^~;, '()&%",'"')>0 then 
            do; 
               value='%nrstr('||ktrim(value)||')'; 
               put "ETLS_DIAG%QUOTE(:) Special characters encountered; References may require: %nrbquote(%)UNQUOTE(&" vname+(-1)').';
               put "NOTE: Special characters encountered; References may require: %nrbquote(%)UNQUOTE(&" vname+(-1)').';
            end; 
            %if %str(&handlename) ne %str() %then 
            %do; 
               value = '%syslput '||ktrim(vname)||'= '||ktrim(value)||" / remote = &handleName;"; 
            %end; 
            %else 
            %do; 
               value = '%let '||ktrim(vname)||'= '||ktrim(value)||';'; 
            %end; 
            
            put "NOTE: Setting macro variable " vname "with statement:" value ;
            call execute(value); 
         end; /* do i= */ 
         dsid = close(dsid); 
      end; /* dsid > 0 */ 
      else 
      do; 
         put "ERROR%QUOTE(:) Parameter table, &parameterTable., could not be"
              " opened.";
         abort; 
      end; 
      stop; 
   run; 
   
   %rcSet(&syserr); 
%mend etls_getParameters; 

%macro etls_loopWEH7ZP9; 
   %local etls_filePrefix; 
   %let etls_filePrefix = ; 
   
   %macro etls_processToLoopWEH7ZPJ(parameterTable=, row=, handleName=rmt);
      %local etls_parmvars; 
      %etls_getParameterNames(parameterTable=&parameterTable, 
         parameterVariableMacro=etls_parmvars, 
         startingColumnNumber=1); 
      %local &etls_parmvars; 
      %etls_getParameters(parameterTable=&parameterTable, row=&row, 
         startingColumnNumber=1); 
      %let etls_previousFilePrefix = &etls_filePrefix;
      %local etls_filePrefix; 
      %let etls_filePrefix = &etls_previousFilePrefix.&handleName; 
      %macro etls_jobWEH7ZPT; 
      
         /**************************************************************************** 
          * Job:             007_101_1_Cleanup_Stage_Table         A5VLIHEZ.BS000031 * 
          * Description:                                                             * 
          *                                                                          * 
          * Metadata Server: rusrpomag01.rus.sas.com                                 * 
          * Port:            8561                                                    * 
          * Location:        /DWH_DWF/Jobs/007_101_Cleanup_Stage                     * 
          *                                                                          * 
          * Server:          SASApp                                A5VLIHEZ.AT000002 * 
          *                                                                          * 
          * Source Tables:   ETL_RESOURCE_REGISTRY -               A5VLIHEZ.BM00004P * 
          *                   etl_sys.ETL_RESOURCE_REGISTRY                          * 
          *                  ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
          *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
          *                  ETL_RESOURCE_REGISTRY_ATTR -          A5VLIHEZ.BM00004Q * 
          *                   etl_sys.ETL_RESOURCE_REGISTRY_ATTR                     * 
          *                                                                          * 
          * Generated on:    7 апреля 2020 г. 17:28:40 MSK                           * 
          * Generated by:    sasmi                                                   * 
          * Version:         SAS Data Integration Studio 4.904                       * 
          ****************************************************************************/ 
         
         /* Generate the process id for job  */ 
         %put Process ID: &SYSJOBID;
         
         /* General macro variables  */ 
         %let jobID = %quote(A5VLIHEZ.BS000031);
         %let etls_jobName = %nrquote(007_101_1_Cleanup_Stage_Table);
         %let etls_userID = %nrquote(sasmi);
         
         
         /* Setup for capturing job status  */ 
         %let etls_startTime = %sysfunc(datetime(),datetime.);
         %let etls_recordsBefore = 0;
         %let etls_recordsAfter = 0;
         %let etls_lib = 0;
         %let etls_table = 0;
         
         %global etls_debug; 
         %macro etls_setDebug; 
            %if %str(&etls_debug) ne 0 %then 
               OPTIONS MPRINT%str(;); 
         %mend; 
         %etls_setDebug; 
         
         /*---- Start of Pre-Process Code  ----*/ 
         
         *let ETL_TABLE_NM = ACCNTAB_ARCH;
         /*---- End of Pre-Process Code  ----*/ 
         
         %rcSet(&syserr); 
         %rcSet(&sqlrc); 
         
         /*==========================================================================* 
          * Step:            Отбор по ресурсу                      A5VLIHEZ.BT0000AX * 
          * Transform:       Join                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Target Table:    Join - work.W007211_ARCH              A5VLIHEZ.BV00003T * 
          *==========================================================================*/ 
         
         /* No sources are defined.  Connect a data source to the transform.  */ 
         /* No mappings are defined for one or more target tables.  Map a source  */ 
         /*  column to a target column.                                           */ 
         /* The from clause has missing source tables.  Add source tables to the  */ 
         /*  open ports.                                                          */ 
         
         /*==========================================================================* 
          * Step:            Отбор по срезу                        A5VLIHEZ.BT0000AY * 
          * Transform:       Join                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   ETL_RESOURCE_REGISTRY -               A5VLIHEZ.BM00004P * 
          *                   etl_sys.ETL_RESOURCE_REGISTRY                          * 
          *                  ETL_RESOURCE_X_ARCH -                 A5VLIHEZ.BM00004R * 
          *                   etl_sys.ETL_RESOURCE_X_ARCH                            * 
          *                  ETL_RESOURCE_REGISTRY_ATTR -          A5VLIHEZ.BM00004Q * 
          *                   etl_sys.ETL_RESOURCE_REGISTRY_ATTR                     * 
          * Target Table:    Join - work.W007211_REG               A5VLIHEZ.BV00003U * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000AY);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W007211_REG;
         quit;
         
         proc sql;
            create table work.W007211_REG as
            select
               ETL_RESOURCE_REGISTRY.VERSION_ID length = 8   
                  format = 21.
                  informat = 21.
                  label = 'VERSION_ID',
               ETL_RESOURCE_REGISTRY.AVAILABLE_DTTM length = 8   
                  format = DATETIME20.
                  informat = DATETIME20.
                  label = 'AVAILABLE_DTTM',
               case 
                  when (min(ETL_RESOURCE_REGISTRY.STATUS_CD)=max(ETL_RESOURCE_REGISTRY.STATUS_CD)) then min(ETL_RESOURCE_REGISTRY.STATUS_CD) 
                  else "-" 
               end as STATUS_CD length = 3   
                  format = $3.
                  informat = $3.
                  label = 'STATUS_CD',
               ETL_RESOURCE_REGISTRY_ATTR.ARCH_ROWS_NO length = 8   
                  label = 'ARCH_ROWS_NO'
            from
               etl_sys.ETL_RESOURCE_REGISTRY as ETL_RESOURCE_REGISTRY inner join 
               etl_sys.ETL_RESOURCE_X_ARCH as ETL_RESOURCE_X_ARCH
                  on
                  (
                     ETL_RESOURCE_REGISTRY.RESOURCE_ID = ETL_RESOURCE_X_ARCH.RESOURCE_ID
                     and ETL_RESOURCE_X_ARCH.ARCH_NM = "&ETL_TABLE_NM"
                  ) inner join 
               etl_sys.ETL_RESOURCE_REGISTRY_ATTR as ETL_RESOURCE_REGISTRY_ATTR
                  on
                  (
                     ETL_RESOURCE_REGISTRY.RESOURCE_ID = ETL_RESOURCE_REGISTRY_ATTR.RESOURCE_ID
                     and ETL_RESOURCE_REGISTRY.VERSION_ID = ETL_RESOURCE_REGISTRY_ATTR.VERSION_ID
                  )
            where
               ETL_RESOURCE_REGISTRY.STATUS_CD <> "C"
            group by
               ETL_RESOURCE_REGISTRY.VERSION_ID,
               ETL_RESOURCE_REGISTRY.AVAILABLE_DTTM
            ;
         quit;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Отбор по срезу **/
         
         /*==========================================================================* 
          * Step:            Отбор ошибочных записей               A5VLIHEZ.BT0000AZ * 
          * Transform:       Join                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   Join - work.W007211_REG               A5VLIHEZ.BV00003U * 
          *                  Join - work.W007211_ARCH              A5VLIHEZ.BV00003T * 
          * Target Table:    SQL Join - work.W54P0QXT              A5VLIHEZ.BV00003V * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000AZ);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W54P0QXT;
         quit;
         
         proc sql;
            create view work.W54P0QXT as
            select
               coalesce(ARCH.ETL_EXTRACT_ID, REG.VERSION_ID) as VERSION_ID length = 8   
                  format = 21.
                  informat = 21.
                  label = 'VERSION_ID',
               REG.AVAILABLE_DTTM length = 8   
                  format = DATETIME20.
                  informat = DATETIME20.
                  label = 'AVAILABLE_DTTM',
               REG.STATUS_CD length = 3   
                  format = $3.
                  informat = $3.
                  label = 'STATUS_CD',
               ifc (not missing(ARCH.ETL_EXTRACT_ID), "Y", "N") as IN_ARCH_FLG length = 1   
                  label = 'IN_ARCH_FLG',
               ifc (not missing(REG.STATUS_CD), "Y", "N") as IN_REG_FLG length = 1   
                  label = 'IN_REG_FLG'
            from
               work.W007211_ARCH as ARCH full join 
               work.W007211_REG as REG
                  on
                  (
                     ARCH.ETL_EXTRACT_ID = REG.VERSION_ID
                  )
            where
               (REG.STATUS_CD NOT IN ("-", "A", "P", "N", "L"))
               or (REG.STATUS_CD IS NULL )
               or (REG.STATUS_CD IN ("N", "L")
               and ARCH.ETL_EXTRACT_ID IS NULL 
               and not (REG.ARCH_ROWS_NO = 0))
            ;
         quit;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Отбор ошибочных записей **/
         
         /*==========================================================================* 
          * Step:            Отбор L-записей                       A5VLIHEZ.BT0000B0 * 
          * Transform:       Join                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   Join - work.W007211_REG               A5VLIHEZ.BV00003U * 
          *                  Join - work.W007211_ARCH              A5VLIHEZ.BV00003T * 
          * Target Table:    Join - work.WSAVWCB                   A5VLIHEZ.BV00003W * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B0);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WSAVWCB;
         quit;
         
         proc sql;
            create view work.WSAVWCB as
            select
               W007211_REG.VERSION_ID length = 8   
                  format = 21.
                  informat = 21.
                  label = 'VERSION_ID',
               W007211_REG.AVAILABLE_DTTM length = 8   
                  format = DATETIME20.
                  informat = DATETIME20.
                  label = 'AVAILABLE_DTTM',
               "Y" as IN_ARCH_FLG length = 1   
                  label = 'IN_ARCH_FLG',
               "Y" as IN_REG_FLG length = 1   
                  label = 'IN_REG_FLG'
            from
               work.W007211_ARCH inner join 
               work.W007211_REG
                  on
                  (
                     W007211_ARCH.ETL_EXTRACT_ID = W007211_REG.VERSION_ID
                  )
            where
               W007211_REG.STATUS_CD = "L"
            order by
               AVAILABLE_DTTM desc
            ;
         quit;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Отбор L-записей **/
         
         /*==========================================================================* 
          * Step:            Упорядочение дат                      A5VLIHEZ.BT0000B1 * 
          * Transform:       Sort                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Join - work.WSAVWCB                   A5VLIHEZ.BV00003W * 
          * Target Table:    Sort - work.W12J1IFKK                 A5VLIHEZ.BV00003X * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B1);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let SYSLAST = %nrquote(work.WSAVWCB); 
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W12J1IFKK;
         quit;
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZW8;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZW8 as
               select
                  AVAILABLE_DTTM
            from &SYSLAST
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZW8;
         
         proc sort data = &SYSLAST 
            out = work.W12J1IFKK
               NODUPKEY ; 
            by
            descending    AVAILABLE_DTTM
            ;
         run; 
         
         %rcSet(&syserr); 
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZW8;
         quit;
         
         
         
         /** Step end Упорядочение дат **/
         
         /*==========================================================================* 
          * Step:            Упорядочение дат                      A5VLIHEZ.BT0000B2 * 
          * Transform:       Rank                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Sort - work.W12J1IFKK                 A5VLIHEZ.BV00003X * 
          * Target Table:    Rank - work.W12J1UELZ                 A5VLIHEZ.BV00003Y * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B2);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let SYSLAST = %nrquote(work.W12J1IFKK); 
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W12J1UELZ;
         quit;
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZWN;
         quit;
         
         data _null_;
            put "NOTE: The following column(s) will be excluded from the mapping"
                 " step: ORDER";
         run;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZWN as
               select
                  AVAILABLE_DTTM
            from &SYSLAST
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZWN;
         
         proc rank data = work.WEH7ZWN 
            out = work.W12J1UELZ
               DESCENDING 
               Ties=LOW; 
               var AVAILABLE_DTTM; 
               ranks ORDER; 
         run; 
         
         %rcSet(&syserr); 
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZWN;
         quit;
         
         
         
         /** Step end Упорядочение дат **/
         
         /*==========================================================================* 
          * Step:            Отбор старых записей                  A5VLIHEZ.BT0000B3 * 
          * Transform:       Join                                                    * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   Join - work.WSAVWCB                   A5VLIHEZ.BV00003W * 
          *                  Rank - work.W12J1UELZ                 A5VLIHEZ.BV00003Y * 
          * Target Table:    Join - work.W12J28I1M                 A5VLIHEZ.BV00003Z * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B3);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W12J28I1M;
         quit;
         
         proc sql;
            create view work.W12J28I1M as
            select
               WSAVWCB.VERSION_ID length = 8   
                  format = 21.
                  informat = 21.
                  label = 'VERSION_ID',
               WSAVWCB.AVAILABLE_DTTM length = 8   
                  format = DATETIME20.
                  informat = DATETIME20.
                  label = 'AVAILABLE_DTTM',
               WSAVWCB.IN_ARCH_FLG length = 1   
                  label = 'IN_ARCH_FLG',
               WSAVWCB.IN_REG_FLG length = 1   
                  label = 'IN_REG_FLG',
               W12J1UELZ.ORDER length = 8   
                  label = 'ORDER'
            from
               work.WSAVWCB as WSAVWCB left join 
               work.W12J1UELZ as W12J1UELZ
                  on
                  (
                     WSAVWCB.AVAILABLE_DTTM = W12J1UELZ.AVAILABLE_DTTM
                  )
            where
               W12J1UELZ.ORDER > &ETL_STG_CLEANUP_KEEP_L
            ;
         quit;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Отбор старых записей **/
         
         /*==========================================================================* 
          * Step:            Append                                A5VLIHEZ.BT0000B4 * 
          * Transform:       Append                                                  * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   SQL Join - work.W54P0QXT              A5VLIHEZ.BV00003V * 
          *                  Join - work.W12J28I1M                 A5VLIHEZ.BV00003Z * 
          * Target Table:    Append - work.W5NEQF5E                A5VLIHEZ.BV000040 * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B4);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let dbxrc = %eval(%sysfunc(exist(work.W54P0QXT, DATA)) or 
               %sysfunc(exist(work.W54P0QXT, VIEW))); 
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZXB;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZXB as
               select
                  VERSION_ID,
                  AVAILABLE_DTTM,
                  STATUS_CD
            from work.W54P0QXT
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZXB;
         
         %let dbxrc = %eval(%sysfunc(exist(work.W12J28I1M, DATA)) or 
               %sysfunc(exist(work.W12J28I1M, VIEW))); 
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZXD;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZXD as
               select
                  VERSION_ID,
                  AVAILABLE_DTTM,
                  ORDER
            from work.W12J28I1M
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZXD;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W5NEQF5E;
         quit;
         
         data work.W5NEQF5E / view=work.W5NEQF5E;
            set work.WEH7ZXB
                work.WEH7ZXD;
            keep VERSION_ID AVAILABLE_DTTM STATUS_CD ORDER; 
         run;
         
         %rcSet(&syserr); 
         
         
         
         /** Step end Append **/
         
         /*==========================================================================* 
          * Step:            Table Loader                          A5VLIHEZ.BT0000B5 * 
          * Transform:       Table Loader (Version 2.1)                              * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Append - work.W5NEQF5E                A5VLIHEZ.BV000040 * 
          *==========================================================================*/ 
         
         /* No targets are defined.  Connect the transform to a data target.  */ 
         /* No mappings are defined for one or more target tables.  Map a source  */ 
         /*  column to a target column.                                           */ 
         
         /*==========================================================================* 
          * Step:            Append                                A5VLIHEZ.BT0000B6 * 
          * Transform:       Append                                                  * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Tables:   SQL Join - work.W54P0QXT              A5VLIHEZ.BV00003V * 
          *                  Join - work.W12J28I1M                 A5VLIHEZ.BV00003Z * 
          * Target Table:    Append - work.WSAYMUX                 A5VLIHEZ.BV000041 * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B6);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let dbxrc = %eval(%sysfunc(exist(work.W54P0QXT, DATA)) or 
               %sysfunc(exist(work.W54P0QXT, VIEW))); 
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZXS;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZXS as
               select
                  VERSION_ID,
                  IN_ARCH_FLG,
                  IN_REG_FLG
            from work.W54P0QXT
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZXS;
         
         %let dbxrc = %eval(%sysfunc(exist(work.W12J28I1M, DATA)) or 
               %sysfunc(exist(work.W12J28I1M, VIEW))); 
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WEH7ZXV;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.WEH7ZXV as
               select
                  VERSION_ID,
                  IN_ARCH_FLG,
                  IN_REG_FLG
            from work.W12J28I1M
            ;
         quit;
         
         %let SYSLAST = work.WEH7ZXV;
         
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WSAYMUX;
         quit;
         
         data work.WSAYMUX;
            set work.WEH7ZXS
                work.WEH7ZXV;
            keep VERSION_ID IN_ARCH_FLG IN_REG_FLG; 
         run;
         
         %rcSet(&syserr); 
         
         
         
         /** Step end Append **/
         
         /*==========================================================================* 
          * Step:            Extract                               A5VLIHEZ.BT0000B7 * 
          * Transform:       Extract                                                 * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Append - work.WSAYMUX                 A5VLIHEZ.BV000041 * 
          * Target Table:    Extract - work.W8B9U7PQ               A5VLIHEZ.BV000042 * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B7);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let SYSLAST = %nrquote(work.WSAYMUX); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete W8B9U7PQ;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create view work.W8B9U7PQ as
               select
                  VERSION_ID
            from &SYSLAST
               where IN_ARCH_FLG = "Y"
            ;
         quit;
         
         %let SYSLAST = work.W8B9U7PQ;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Extract **/
         
         /*==========================================================================* 
          * Step:            Extract                               A5VLIHEZ.BT0000B8 * 
          * Transform:       Extract                                                 * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Append - work.WSAYMUX                 A5VLIHEZ.BV000041 * 
          * Target Table:    Extract - work.WSAV4YV                A5VLIHEZ.BV000043 * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000B8);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let SYSLAST = %nrquote(work.WSAYMUX); 
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = -1;
         option DBIDIRECTEXEC;
         
         /*---- Map the columns  ----*/ 
         proc datasets lib = work nolist nowarn memtype = (data view);
            delete WSAV4YV;
         quit;
         
         %put %str(NOTE: Mapping columns ...);
         proc sql;
            create table work.WSAV4YV as
               select
                  ("ALL") as RESOURCE_ID length = 8
                     format = $8.
                     informat = $8.
                     label = 'RESOURCE_ID',
                  VERSION_ID,
                  ("NOCHG") as AVAILABLE_DTTM length = 8
                     format = $8.
                     informat = $8.
                     label = 'AVAILABLE_DTTM',
                  (&JOB_ID) as PROCESSED_BY_JOB_ID length = 8
                     format = 21.
                     informat = 21.
                     label = 'PROCESSED_BY_JOB_ID',
                  ("C") as STATUS_CD length = 3
                     format = $3.
                     informat = $3.
                     label = 'STATUS_CD'
            from &SYSLAST
            ;
         quit;
         
         %let SYSLAST = work.WSAV4YV;
         
         %global etls_sql_pushDown;
         %let etls_sql_pushDown = &sys_sql_ip_all;
         
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Extract **/
         
         /*==========================================================================* 
          * Step:            Очистить архивную таблицу             A5VLIHEZ.BT0000B9 * 
          * Transform:       Очистить архивную таблицу                               * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Extract - work.W8B9U7PQ               A5VLIHEZ.BV000042 * 
          *==========================================================================*/ 
         
         /* No targets are defined.  Connect the transform to a data target.  */ 
         /* Transform requires at least 1 target table.  */ 
         
         /*==========================================================================* 
          * Step:            Обновить ресурсы                      A5VLIHEZ.BT0000BA * 
          * Transform:       Обновить ресурсы                                        * 
          * Description:                                                             * 
          *                                                                          * 
          * Source Table:    Extract - work.WSAV4YV                A5VLIHEZ.BV000043 * 
          *==========================================================================*/ 
         
         %let transformID = %quote(A5VLIHEZ.BT0000BA);
         %let trans_rc = 0;
         %let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 
         
         %let SYSLAST = %nrquote(work.WSAV4YV); 
         
         %let _INPUT_count = 1; 
         %let _INPUT = work.WSAV4YV;
         %let _INPUT_connect = ;
         %let _INPUT_engine = ;
         %let _INPUT_memtype = DATA;
         %let _INPUT_options = %nrquote();
         %let _INPUT_alter = %nrquote();
         %let _INPUT_path = %nrquote(/Extract_A5VLIHEZ.BV000043%(WorkTable%));
         %let _INPUT_type = 1;
         %let _INPUT_label = %nrquote();
         
         %let tpIn = work.WSAV4YV;
         %let tpIn_connect = ;
         %let tpIn_engine = ;
         %let tpIn_memtype = DATA;
         %let tpIn_options = %nrquote();
         %let tpIn_alter = %nrquote();
         %let tpIn_path = %nrquote(/Extract_A5VLIHEZ.BV000043%(WorkTable%));
         %let tpIn_type = 1;
         %let tpIn_label = %nrquote();
         
         %let _OUTPUT_count = 0; 
         
         %let tpNotFound = %nrquote(NOP);
         %let tpWhere = ;
         %let refDesc = ;
         
         /*****************************************************************
         *  ВЕРСИЯ:
         *     $Id: transform_resource_update_all.sas 3674:869e126e0df8 2015-01-23 10:44:57Z rusane $
         *
         ******************************************************************
         *  НАЗНАЧЕНИЕ:
         *     Обновляет несколько ресурсов по таблице.
         *
         *  ПАРАМЕТРЫ:
         *     tpIn                    +  входная таблица (поля: resource_id, version_id, available_dttm, processed_by_job_id, status_cd)
         *                                Поля available_dttm, processed_by_job_id, status_cd могут отсутствовать и в этом случае не обновляются
         *                                Присутствующие поля должны содержать обновленные значения
         *     tpNotFound              -  если запись не найдена:
         *                                NOP - ничего не делать
         *                                ERR - сообщать об ошибке
         *                                ADD - добавить новую запись
         *     tpWhere                 -  дополнительное ограничение, в формате ETL_DBMS
         *
         ******************************************************************/
         
         %macro transform_resource_update_all;
            /* Получаем список доступных переменных */
            %local lmvInVars;
            %let lmvInVars = %upcase(%member_vars (&tpIn));
         
            /* Обновляем все ресурсы */
            %macro _tr_resource_update_all_loop;
               %resource_update (
                  mpResourceId=&resource_id, mpVersion=&version_id,
                  %if %index(&lmvInVars, AVAILABLE_DTTM) %then
                     mpDate=&available_dttm,
                  ;
                  %if %index(&lmvInVars, PROCESSED_BY_JOB_ID) %then
                     mpProcessedBy=&processed_by_job_id,
                  ;
                  %if %index(&lmvInVars, STATUS_CD) %then
                     mpStatus=&status_cd,
                  ;
                  mpNotFound=&tpNotFound,
                  mpWhere=&tpWhere
               );
            %mend _tr_resource_update_all_loop;
         
            %util_loop_data (mpLoopMacro=_tr_resource_update_all_loop, mpData=&tpIn);
         %mend transform_resource_update_all;
         
         %transform_resource_update_all;
         
         %rcSet(&syserr); 
         %rcSet(&sysrc); 
         %rcSet(&sqlrc); 
         
         
         
         /** Step end Обновить ресурсы **/
         
         %let etls_endTime = %sysfunc(datetime(),datetime.);
         
         
         
         /**  Job end 007_101_1_Cleanup_Stage_Table **/
         
         /* Reset jobid and name */
         %let jobID = %quote(A5VLIHEZ.BS00003A);
         %let etls_jobName = %nrquote(007_101_Cleanup_Stage);
         
      %mend etls_jobWEH7ZPT; 
      
      %etls_jobWEH7ZPT; 
      
      %let handleName = %etls_getHandle(statusTable=&etls_statusTable,
         handleVariable=etls_handleName, row=&&&etls_controlName);
         
      %let job_rc&handleName. = &job_rc; 
      
      %etls_freeHandle(statusTable=&etls_statusTable, statusVariable=etls_status, 
         handleVariable=etls_handleName, handleName="&handleName", 
         startTimeVariable=etls_startTime, endTimeVariable=etls_endTime, signoff=0, 
         returnCodeVariable=etls_jobRC, returnCodeMacroVariable=job_rc&handleName., setMainJobRc=1); 
         
   %mend etls_processToLoopWEH7ZPJ;
   
   %local etls_controlTable etls_statusTable etls_controlName 
      etls_processesRunning etls_maxProcesses etls_parameterTable 
      etls_additionalSignonOptions etls_signonRetries;
   %let etls_controlName = L82_; 
   %let etls_statusTable = work.W6P4JRG0; 
   %let etls_parameterTable = work.WEH8015; 
   %let &etls_controlName = 0;
   %let etls_controlTable = work.W6OVNW0K;
   
   %put %str(NOTE: Creating status table...);
   data &etls_statusTable 
      (keep = etls_handleName etls_machineId etls_startTime etls_endTime etls_status 
              etls_jobRC ARCH_NM ETL_STG_CLEANUP_DT
      );
      attrib etls_handleName length = $32
         label = 'Name of handle to remote session'; 
      attrib etls_machineId length = $32
         label = 'Name of machine executing the task'; 
      attrib etls_startTime length = 8
         format = nldatmap.
         label = 'Start time of task'; 
      attrib etls_endTime length = 8
         format = nldatmap.
         label = 'End time of task'; 
      attrib etls_status length = $32
         label = 'Current status of task'; 
      attrib etls_jobRC length = 8
         label = 'Return code of task'; 
      attrib ARCH_NM length = $32
         format = $32.
         informat = $32.
         label = 'TABLE_NM'; 
      attrib ETL_STG_CLEANUP_DT length = 8
         format = DATE9.
         informat = DATE9.
         label = 'ETL_STG_CLEANUP_DT'; 
      set &etls_controlTable;
   run;
   
   %rcSet(&syserr); 
   
   %put %str(NOTE: Creating parameter table...);
   proc sql; 
      create table &etls_parameterTable as 
         select ARCH_NM as ETL_TABLE_NM 
         from &etls_controlTable; 
   quit; 
   
   %rcSet(&sqlrc); 
   
   /* Get the number of times to iterate from the number of rows in the source  */ 
   /*  table                                                                    */ 
   proc sql noprint; 
      select count(*) into :&etls_controlName._max from &etls_statusTable;
      %let &etls_controlName._max = &&&etls_controlName._max;
   quit;
   
   %rcSet(&sqlrc); 
   
   %let etls_maxProcesses = 1; 
   
   %if (&etls_maxProcesses > 0) %then 
   %do; 
      %do %until (&&&etls_controlName ge &&&etls_controlName._max); 
      
         %let etls_lastLoopPtr = &&&etls_controlName;
         
         %let etls_processesRunning = 0; 
         
         %do %while(&etls_processesRunning lt &&&etls_controlName._max 
            and &etls_processesRunning lt &etls_maxProcesses 
            and &&&etls_controlName lt &&&etls_controlName._max);
            
            %let &etls_controlName = %eval(&&&etls_controlName+1);
            
            %let job_rcLast=&job_rc; 
            
            %etls_createHandle(statusTable=&etls_statusTable,
                               statusVariable=etls_status,
                               handleVariable=etls_handleName,
                               handlePrefix=&etls_controlName,
                               statusSetting="Running",
                               row=&&&etls_controlName,
                               machineVariable=etls_machineId,
                               startTimeVariable=etls_startTime,
                               signon=0,
                               useGrid=0);
            
         %let etls_processesRunning = 1; 
         %etls_processToLoopWEH7ZPJ(parameterTable=&etls_parameterTable, row=&&&etls_controlName,
            handleName=%etls_getHandle(statusTable=&etls_statusTable,
            handleVariable=etls_handleName, row=&&&etls_controlName)); 
         
         /* Reset main Job_RC and Trans_RC to max return code of all iterations */ 
         %let job_rcThisIter=&job_rc; 
         %let job_rc=&job_rcLast; 
         %let trans_rc=&job_rcLast; 
         %rcSet(&job_rcThisIter); 
      %end; 
      
   %end; 
   
%end;

proc datasets lib = work nolist nowarn memtype = (data view);
   delete WEH8015;
quit;

%mend etls_loopWEH7ZP9; 

%etls_loopWEH7ZP9; 



/** Step end Loop **/

/*==========================================================================* 
 * Step:            Loop End                              A5VLIHEZ.BT00007X * 
 * Transform:       Loop End                                                * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007X);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 



/** Step end Loop End **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00007Y * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00007Y);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

