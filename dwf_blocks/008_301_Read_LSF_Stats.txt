/**************************************************************************** 
 * Job:             008_301_Read_LSF_Stats                A5VLIHEZ.BS00003F * 
 * Description:                                                             * 
 *                                                                          * 
 * Metadata Server: rusrpomag01.rus.sas.com                                 * 
 * Port:            8561                                                    * 
 * Location:        /DWH_DWF/Blocks/008_Scheduler                           * 
 *                                                                          * 
 * Server:          SASApp                                A5VLIHEZ.AT000002 * 
 *                                                                          * 
 * Source Tables:   TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 *                  TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 * Target Tables:   TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 *                  LSF_JOB - etl_sys.LSF_JOB             A5VLIHEZ.BM00004V * 
 *                  ETL_JOB - etl_sys.ETL_JOB             A5VLIHEZ.BM00004G * 
 *                                                                          * 
 * Generated on:    7 апреля 2020 г. 17:31:53 MSK                           * 
 * Generated by:    sasmi                                                   * 
 * Version:         SAS Data Integration Studio 4.904                       * 
 ****************************************************************************/ 

/* Generate the process id for job  */ 
%put Process ID: &SYSJOBID;

/* General macro variables  */ 
%let jobID = %quote(A5VLIHEZ.BS00003F);
%let etls_jobName = %nrquote(008_301_Read_LSF_Stats);
%let etls_userID = %nrquote(sasmi);

/* Setup to capture return codes  */ 
%global job_rc trans_rc sqlrc;
%let sysrc = 0;
%let job_rc = 0;
%let trans_rc = 0;
%let sqlrc = 0;
%global etls_stepStartTime; 
/* initialize syserr to 0 */ 
data _null_; run;

%macro rcSet(error); 
   %if (&error gt &trans_rc) %then 
      %let trans_rc = &error;
   %if (&error gt &job_rc) %then 
      %let job_rc = &error;
%mend rcSet; 

%macro rcSetDS(error); 
   if &error gt input(symget('trans_rc'),12.) then 
      call symput('trans_rc',trim(left(put(&error,12.))));
   if &error gt input(symget('job_rc'),12.) then 
      call symput('job_rc',trim(left(put(&error,12.))));
%mend rcSetDS; 

/* Setup for capturing job status  */ 
%let etls_startTime = %sysfunc(datetime(),datetime.);
%let etls_recordsBefore = 0;
%let etls_recordsAfter = 0;
%let etls_lib = 0;
%let etls_table = 0;

%global etls_debug; 
%macro etls_setDebug; 
   %if %str(&etls_debug) ne 0 %then 
      OPTIONS MPRINT%str(;); 
%mend; 
%etls_setDebug; 

/*==========================================================================* 
 * Step:            Начать модуль                         A5VLIHEZ.BT00008B * 
 * Transform:       Начать модуль                                           * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008B);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: transform_job_start.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Регистрирует начало модуля ETL.
*
*  ПАРАМЕТРЫ:
*     нет
*
******************************************************************/

%macro transform_job_start;
   %etl_job_start;
%mend transform_job_start;

%transform_job_start;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Начать модуль **/

/*==========================================================================* 
 * Step:            Опрос LSF                             A5VLIHEZ.BT00008C * 
 * Transform:       User Written                                            * 
 * Description:                                                             * 
 *                                                                          * 
 * Target Table:    User Written - work.W2TJTXMD          A5VLIHEZ.BV000035 * 
 *                                                                          * 
 * User Written:    SourceCode                                              * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008C);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0;
%let _OUTPUT_count = 1;
%let _OUTPUT = work.W2TJTXMD;
%let _OUTPUT_connect = ;
%let _OUTPUT_engine = ;
%let _OUTPUT_memtype = DATA;
%let _OUTPUT_options = %nrquote();
%let _OUTPUT_alter = %nrquote();
%let _OUTPUT_path = %nrquote(/User Written_A5VLIHEZ.BV000035%(WorkTable%));
%let _OUTPUT_type = 1;
%let _OUTPUT_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT_keep = jobid user job_name pend psusp run ususp ssusp unkwn total 
        lsf_status_cd;
%let _OUTPUT_col_count = 11;
%let _OUTPUT_col0_name = jobid;
%let _OUTPUT_col0_table = work.W2TJTXMD;
%let _OUTPUT_col0_length = 8;
%let _OUTPUT_col0_type = ;
%let _OUTPUT_col0_format = ;
%let _OUTPUT_col0_informat = ;
%let _OUTPUT_col0_label = %nrquote();
%let _OUTPUT_col0_exp = ;
%let _OUTPUT_col0_input_count = 0;
%let _OUTPUT_col1_name = user;
%let _OUTPUT_col1_table = work.W2TJTXMD;
%let _OUTPUT_col1_length = 20;
%let _OUTPUT_col1_type = $;
%let _OUTPUT_col1_format = ;
%let _OUTPUT_col1_informat = ;
%let _OUTPUT_col1_label = %nrquote();
%let _OUTPUT_col1_exp = ;
%let _OUTPUT_col1_input_count = 0;
%let _OUTPUT_col2_name = job_name;
%let _OUTPUT_col2_table = work.W2TJTXMD;
%let _OUTPUT_col2_length = 100;
%let _OUTPUT_col2_type = $;
%let _OUTPUT_col2_format = ;
%let _OUTPUT_col2_informat = ;
%let _OUTPUT_col2_label = %nrquote();
%let _OUTPUT_col2_exp = ;
%let _OUTPUT_col2_input_count = 0;
%let _OUTPUT_col3_name = pend;
%let _OUTPUT_col3_table = work.W2TJTXMD;
%let _OUTPUT_col3_length = 8;
%let _OUTPUT_col3_type = ;
%let _OUTPUT_col3_format = ;
%let _OUTPUT_col3_informat = ;
%let _OUTPUT_col3_label = %nrquote();
%let _OUTPUT_col3_exp = ;
%let _OUTPUT_col3_input_count = 0;
%let _OUTPUT_col4_name = psusp;
%let _OUTPUT_col4_table = work.W2TJTXMD;
%let _OUTPUT_col4_length = 8;
%let _OUTPUT_col4_type = ;
%let _OUTPUT_col4_format = ;
%let _OUTPUT_col4_informat = ;
%let _OUTPUT_col4_label = %nrquote();
%let _OUTPUT_col4_exp = ;
%let _OUTPUT_col4_input_count = 0;
%let _OUTPUT_col5_name = run;
%let _OUTPUT_col5_table = work.W2TJTXMD;
%let _OUTPUT_col5_length = 8;
%let _OUTPUT_col5_type = ;
%let _OUTPUT_col5_format = ;
%let _OUTPUT_col5_informat = ;
%let _OUTPUT_col5_label = %nrquote();
%let _OUTPUT_col5_exp = ;
%let _OUTPUT_col5_input_count = 0;
%let _OUTPUT_col6_name = ususp;
%let _OUTPUT_col6_table = work.W2TJTXMD;
%let _OUTPUT_col6_length = 8;
%let _OUTPUT_col6_type = ;
%let _OUTPUT_col6_format = ;
%let _OUTPUT_col6_informat = ;
%let _OUTPUT_col6_label = %nrquote();
%let _OUTPUT_col6_exp = ;
%let _OUTPUT_col6_input_count = 0;
%let _OUTPUT_col7_name = ssusp;
%let _OUTPUT_col7_table = work.W2TJTXMD;
%let _OUTPUT_col7_length = 8;
%let _OUTPUT_col7_type = ;
%let _OUTPUT_col7_format = ;
%let _OUTPUT_col7_informat = ;
%let _OUTPUT_col7_label = %nrquote();
%let _OUTPUT_col7_exp = ;
%let _OUTPUT_col7_input_count = 0;
%let _OUTPUT_col8_name = unkwn;
%let _OUTPUT_col8_table = work.W2TJTXMD;
%let _OUTPUT_col8_length = 8;
%let _OUTPUT_col8_type = ;
%let _OUTPUT_col8_format = ;
%let _OUTPUT_col8_informat = ;
%let _OUTPUT_col8_label = %nrquote();
%let _OUTPUT_col8_exp = ;
%let _OUTPUT_col8_input_count = 0;
%let _OUTPUT_col9_name = total;
%let _OUTPUT_col9_table = work.W2TJTXMD;
%let _OUTPUT_col9_length = 8;
%let _OUTPUT_col9_type = ;
%let _OUTPUT_col9_format = ;
%let _OUTPUT_col9_informat = ;
%let _OUTPUT_col9_label = %nrquote();
%let _OUTPUT_col9_exp = ;
%let _OUTPUT_col9_input_count = 0;
%let _OUTPUT_col10_name = lsf_status_cd;
%let _OUTPUT_col10_table = work.W2TJTXMD;
%let _OUTPUT_col10_length = 10;
%let _OUTPUT_col10_type = $;
%let _OUTPUT_col10_format = ;
%let _OUTPUT_col10_informat = ;
%let _OUTPUT_col10_label = %nrquote();
%let _OUTPUT_col10_exp = ;
%let _OUTPUT_col10_input_count = 0;
%let _OUTPUT_filetype = WorkTable;

%let _OUTPUT1 = work.W2TJTXMD;
%let _OUTPUT1_connect = ;
%let _OUTPUT1_engine = ;
%let _OUTPUT1_memtype = DATA;
%let _OUTPUT1_options = %nrquote();
%let _OUTPUT1_alter = %nrquote();
%let _OUTPUT1_path = %nrquote(/User Written_A5VLIHEZ.BV000035%(WorkTable%));
%let _OUTPUT1_type = 1;
%let _OUTPUT1_label = %nrquote();
/* List of target columns to keep  */ 
%let _OUTPUT1_keep = jobid user job_name pend psusp run ususp ssusp unkwn total 
        lsf_status_cd;
%let _OUTPUT1_col_count = 11;
%let _OUTPUT1_col0_name = jobid;
%let _OUTPUT1_col0_table = work.W2TJTXMD;
%let _OUTPUT1_col0_length = 8;
%let _OUTPUT1_col0_type = ;
%let _OUTPUT1_col0_format = ;
%let _OUTPUT1_col0_informat = ;
%let _OUTPUT1_col0_label = %nrquote();
%let _OUTPUT1_col0_exp = ;
%let _OUTPUT1_col0_input_count = 0;
%let _OUTPUT1_col1_name = user;
%let _OUTPUT1_col1_table = work.W2TJTXMD;
%let _OUTPUT1_col1_length = 20;
%let _OUTPUT1_col1_type = $;
%let _OUTPUT1_col1_format = ;
%let _OUTPUT1_col1_informat = ;
%let _OUTPUT1_col1_label = %nrquote();
%let _OUTPUT1_col1_exp = ;
%let _OUTPUT1_col1_input_count = 0;
%let _OUTPUT1_col2_name = job_name;
%let _OUTPUT1_col2_table = work.W2TJTXMD;
%let _OUTPUT1_col2_length = 100;
%let _OUTPUT1_col2_type = $;
%let _OUTPUT1_col2_format = ;
%let _OUTPUT1_col2_informat = ;
%let _OUTPUT1_col2_label = %nrquote();
%let _OUTPUT1_col2_exp = ;
%let _OUTPUT1_col2_input_count = 0;
%let _OUTPUT1_col3_name = pend;
%let _OUTPUT1_col3_table = work.W2TJTXMD;
%let _OUTPUT1_col3_length = 8;
%let _OUTPUT1_col3_type = ;
%let _OUTPUT1_col3_format = ;
%let _OUTPUT1_col3_informat = ;
%let _OUTPUT1_col3_label = %nrquote();
%let _OUTPUT1_col3_exp = ;
%let _OUTPUT1_col3_input_count = 0;
%let _OUTPUT1_col4_name = psusp;
%let _OUTPUT1_col4_table = work.W2TJTXMD;
%let _OUTPUT1_col4_length = 8;
%let _OUTPUT1_col4_type = ;
%let _OUTPUT1_col4_format = ;
%let _OUTPUT1_col4_informat = ;
%let _OUTPUT1_col4_label = %nrquote();
%let _OUTPUT1_col4_exp = ;
%let _OUTPUT1_col4_input_count = 0;
%let _OUTPUT1_col5_name = run;
%let _OUTPUT1_col5_table = work.W2TJTXMD;
%let _OUTPUT1_col5_length = 8;
%let _OUTPUT1_col5_type = ;
%let _OUTPUT1_col5_format = ;
%let _OUTPUT1_col5_informat = ;
%let _OUTPUT1_col5_label = %nrquote();
%let _OUTPUT1_col5_exp = ;
%let _OUTPUT1_col5_input_count = 0;
%let _OUTPUT1_col6_name = ususp;
%let _OUTPUT1_col6_table = work.W2TJTXMD;
%let _OUTPUT1_col6_length = 8;
%let _OUTPUT1_col6_type = ;
%let _OUTPUT1_col6_format = ;
%let _OUTPUT1_col6_informat = ;
%let _OUTPUT1_col6_label = %nrquote();
%let _OUTPUT1_col6_exp = ;
%let _OUTPUT1_col6_input_count = 0;
%let _OUTPUT1_col7_name = ssusp;
%let _OUTPUT1_col7_table = work.W2TJTXMD;
%let _OUTPUT1_col7_length = 8;
%let _OUTPUT1_col7_type = ;
%let _OUTPUT1_col7_format = ;
%let _OUTPUT1_col7_informat = ;
%let _OUTPUT1_col7_label = %nrquote();
%let _OUTPUT1_col7_exp = ;
%let _OUTPUT1_col7_input_count = 0;
%let _OUTPUT1_col8_name = unkwn;
%let _OUTPUT1_col8_table = work.W2TJTXMD;
%let _OUTPUT1_col8_length = 8;
%let _OUTPUT1_col8_type = ;
%let _OUTPUT1_col8_format = ;
%let _OUTPUT1_col8_informat = ;
%let _OUTPUT1_col8_label = %nrquote();
%let _OUTPUT1_col8_exp = ;
%let _OUTPUT1_col8_input_count = 0;
%let _OUTPUT1_col9_name = total;
%let _OUTPUT1_col9_table = work.W2TJTXMD;
%let _OUTPUT1_col9_length = 8;
%let _OUTPUT1_col9_type = ;
%let _OUTPUT1_col9_format = ;
%let _OUTPUT1_col9_informat = ;
%let _OUTPUT1_col9_label = %nrquote();
%let _OUTPUT1_col9_exp = ;
%let _OUTPUT1_col9_input_count = 0;
%let _OUTPUT1_col10_name = lsf_status_cd;
%let _OUTPUT1_col10_table = work.W2TJTXMD;
%let _OUTPUT1_col10_length = 10;
%let _OUTPUT1_col10_type = $;
%let _OUTPUT1_col10_format = ;
%let _OUTPUT1_col10_informat = ;
%let _OUTPUT1_col10_label = %nrquote();
%let _OUTPUT1_col10_exp = ;
%let _OUTPUT1_col10_input_count = 0;
%let _OUTPUT1_filetype = WorkTable;

/*---- Start of User Written Code  ----*/ 

/*****************************************************************
*  ВЕРСИЯ:
*     $Id: 010_001_Get_LSF_status.sas 2577:9a75e7b5c874 2013-12-04 07:47:06Z rusane $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Код для джоба 008_120_Read_LSF_Stats
*     Получает из LSF текущие состояния джобов за последние LSF_HIST_QUERY_DAYS дней
*
******************************************************************
*  Использует:
*     XCMD
*
*  Устанавливает макропеременные:
*     нет
*
******************************************************************
*  27-11-2013  Соколов        Начальное кодирование
*  04-12-2013  Нестерёнок     Доработка
******************************************************************/

%macro sm_read_lsf_hist(mpState=, mpOut=);
   filename cmd pipe "bhist -&mpState -n &LSF_HIST_QUERY_DAYS";

   data &mpOut;
      length jobid 8 user $20 job_name $100 pend psusp run ususp ssusp unkwn total 8 lsf_status_cd $10;

      infile cmd firstobs=3;
      input jobid user job_name pend psusp run ususp ssusp unkwn total;

      %if &mpState = p %then
         lsf_status_cd = "&LSF_PENDING";
      %else %if &mpState = r %then
         lsf_status_cd = "&LSF_RUNNING";
      %else %if &mpState = s %then
         lsf_status_cd = "&LSF_SUSPENDED";
      %else %if &mpState = d %then
         lsf_status_cd = "&LSF_DONE";
      %else %if &mpState = e %then
         lsf_status_cd = "&LSF_EXIT";
      ;
   run;

   proc sort data=&mpOut;
      by jobid;
   run;
%mend sm_read_lsf_hist;

%sm_read_lsf_hist(mpState=p, mpOut=t_008_120_pending);
%sm_read_lsf_hist(mpState=r, mpOut=t_008_120_running);
%sm_read_lsf_hist(mpState=s, mpOut=t_008_120_suspended);
/* Важно - в список D входят все завершенные джобы, в т.ч. неуспешные */
%sm_read_lsf_hist(mpState=d, mpOut=t_008_120_finished);
%sm_read_lsf_hist(mpState=e, mpOut=t_008_120_exit);


data &_OUTPUT;
   set
      t_008_120_pending
      t_008_120_running
      t_008_120_suspended
      t_008_120_finished
      t_008_120_exit
   ;
   by jobid;
   if last.jobid;
run;

/*---- End of User Written Code  ----*/ 

%rcSet(&syserr); 
%rcSet(&sqlrc); 


/** Step end Опрос LSF **/

/*==========================================================================* 
 * Step:            Table Loader                          A5VLIHEZ.BT00008D * 
 * Transform:       Table Loader (Version 2.1)                              * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    User Written - work.W2TJTXMD          A5VLIHEZ.BV000035 * 
 * Target Table:    TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008D);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(work.W2TJTXMD); 

%global etls_sql_pushDown;
%let etls_sql_pushDown = -1;
option DBIDIRECTEXEC;

%global etls_tableExist;
%global etls_numIndex;
%global etls_lastTable;
%let etls_tableExist = -1; 
%let etls_numIndex = -1; 
%let etls_lastTable = &SYSLAST; 

/*---- Define load data macro  ----*/ 

/* --------------------------------------------------------------
   Load Technique Selection: Replace - Truncate
   Constraint and index action selections: 'INIT','ASIS','ASIS','ASIS'
   Additional options selections... 
      Set unmapped to missing on updates: false 
   -------------------------------------------------------------- */
%macro etls_loader;

   %let etls_tableOptions = ;
   
   /*---- Map the columns  ----*/ 
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEID9GG;
   quit;
   
   data _null_;
      put "NOTE: The following column(s) do not have a column mapping, so the"
           " value(s) will be set to missing: PARENT_FLOW_ID";
   run;
   
   %put %str(NOTE: Mapping columns ...);
   proc sql;
      create view work.WEID9GG as
         select
            jobid as LSF_JOB_ID,
            . as PARENT_FLOW_ID length = 8,
            LSF_STATUS_CD   
               format = $10.
               informat = $10.,
            run as RUN_AMT,
            pend as PEND_AMT
      from &etls_lastTable
      ;
   quit;
   
   %let SYSLAST = work.WEID9GG;
   
   %let etls_lastTable = &SYSLAST; 
   %let etls_tableOptions = ; 
   
   /* Determine if the target table exists  */ 
   %let etls_tableExist = %eval(%sysfunc(exist(etl_sys.TMP_LSF_JOB, DATA)) or 
         %sysfunc(exist(etl_sys.TMP_LSF_JOB, VIEW))); 
   
   /*---- Create a new table  ----*/ 
   %if (&etls_tableExist eq 0) %then 
   %do;  /* if table does not exist  */ 
   
      %put %str(NOTE: Creating table ...);
      
      data etl_sys.TMP_LSF_JOB
              (dbnull = (
                         LSF_JOB_ID = NO
                         PARENT_FLOW_ID = YES
                         LSF_STATUS_CD = NO
                         RUN_AMT = YES
                         PEND_AMT = YES));
         attrib LSF_JOB_ID length = 8
            label = 'LSF_JOB_ID'; 
         attrib PARENT_FLOW_ID length = 8
            label = 'PARENT_FLOW_ID'; 
         attrib LSF_STATUS_CD length = $10
            format = $10.
            informat = $10.
            label = 'LSF_STATUS_CD'; 
         attrib RUN_AMT length = 8
            label = 'RUN_AMT'; 
         attrib PEND_AMT length = 8
            label = 'PEND_AMT'; 
         call missing(of _all_);
         stop;
      run;
      
      %rcSet(&syserr); 
      
      /*---- Create the integrity constraints for a table  ----*/ 
      %put %str(NOTE: Creating integrity constraints ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            alter table ETL_SYS.TMP_LSF_JOB      
               add primary key (LSF_JOB_ID)
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit;
      
      %rcSet(&sqlrc); 
      
   %end;  /* if table does not exist  */ 
   
   %else 
   %do;  /* table exists */ 
      /*---- Truncate a table  ----*/ 
      %put %str(NOTE: Truncating table ...);
      proc sql;
         connect to ORACLE
         ( 
             DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
         ); 
         reset noprint; 
         
         execute 
         ( 
            truncate table ETL_SYS.TMP_LSF_JOB
         ) by ORACLE; 
         
         %rcSet(&sqlrc); 
         
         disconnect from ORACLE; 
      quit; 
      
      %rcSet(&sqlrc); 
      
   %end; /* table exists */ 
   
   /*---- Append  ----*/ 
   %put %str(NOTE: Appending data ...);
   
   proc append base = etl_sys.TMP_LSF_JOB 
      data = &etls_lastTable (&etls_tableOptions)  force ; 
    run; 
   
   %rcSet(&syserr); 
   
   proc datasets lib = work nolist nowarn memtype = (data view);
      delete WEID9GG;
   quit;
   
%mend etls_loader;
%etls_loader;



/** Step end Table Loader **/

/*==========================================================================* 
 * Step:            Merge                                 A5VLIHEZ.BT00008E * 
 * Transform:       Merge                                                   * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 * Target Table:    LSF_JOB - etl_sys.LSF_JOB             A5VLIHEZ.BM00004V * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008E);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_sys.TMP_LSF_JOB); 

%macro etls_sql_merge;

/* Determine if the table exists  */ 
%let etls_tableExist = %eval(%sysfunc(exist(etl_sys.LSF_JOB, DATA)) or 
      %sysfunc(exist(etl_sys.LSF_JOB, VIEW))); 

/*---- Create a new table  ----*/ 
%if (&etls_tableExist eq 0) %then 
%do;  /* if table does not exist  */ 

   %put %str(NOTE: Creating table ...);
   
   data etl_sys.LSF_JOB
           (dbnull = (
                      LSF_JOB_ID = NO
                      PARENT_FLOW_ID = YES
                      LSF_STATUS_CD = NO
                      RUN_AMT = YES
                      PEND_AMT = YES));
      attrib LSF_JOB_ID length = 8
         label = 'LSF_JOB_ID'; 
      attrib PARENT_FLOW_ID length = 8
         label = 'PARENT_FLOW_ID'; 
      attrib LSF_STATUS_CD length = $10
         format = $10.
         informat = $10.
         label = 'LSF_STATUS_CD'; 
      attrib RUN_AMT length = 8
         label = 'RUN_AMT'; 
      attrib PEND_AMT length = 8
         label = 'PEND_AMT'; 
      call missing(of _all_);
      stop;
   run;
   
   %rcSet(&syserr); 
   
   /*---- Create the integrity constraints for a table  ----*/ 
   %put %str(NOTE: Creating integrity constraints ...);
   proc sql;
      connect to ORACLE
      ( 
          DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
      ); 
      reset noprint; 
      
      execute 
      ( 
         alter table ETL_SYS.LSF_JOB      
            add primary key (LSF_JOB_ID)
      ) by ORACLE; 
      
      %rcSet(&sqlrc); 
      
      disconnect from ORACLE; 
   quit;
   
   %rcSet(&sqlrc); 
   
%end;  /* if table does not exist  */ 

/*---- Update the target table  ----*/ 
proc sql;
   connect to ORACLE
   ( 
       DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
   ); 
   execute 
   ( 
      MERGE INTO
         ETL_SYS.LSF_JOB
      USING
         ETL_SYS.TMP_LSF_JOB
      ON
         (
            TMP_LSF_JOB.LSF_JOB_ID = LSF_JOB.LSF_JOB_ID
         )
      WHEN MATCHED THEN UPDATE
         set 
            LSF_JOB.LSF_STATUS_CD= TMP_LSF_JOB.LSF_STATUS_CD,
            LSF_JOB.RUN_AMT= TMP_LSF_JOB.RUN_AMT,
            LSF_JOB.PEND_AMT= TMP_LSF_JOB.PEND_AMT
      WHEN NOT MATCHED THEN INSERT
         (
            LSF_JOB.LSF_JOB_ID,
            LSF_JOB.PARENT_FLOW_ID,
            LSF_JOB.LSF_STATUS_CD,
            LSF_JOB.RUN_AMT,
            LSF_JOB.PEND_AMT
         )
         values
         (   
            TMP_LSF_JOB.LSF_JOB_ID,
            TMP_LSF_JOB.PARENT_FLOW_ID,
            TMP_LSF_JOB.LSF_STATUS_CD,
            TMP_LSF_JOB.RUN_AMT,
            TMP_LSF_JOB.PEND_AMT
         )
   ) by ORACLE; 
   
   %rcSet(&sqlrc); 
   
   disconnect from ORACLE; 
   
quit;

%rcSet(&syscc); 


%mend etls_sql_merge;

/* execute etls_sql_merge  */ 
%etls_sql_merge;



/** Step end Merge **/

/*==========================================================================* 
 * Step:            Merge                                 A5VLIHEZ.BT00008F * 
 * Transform:       Merge                                                   * 
 * Description:                                                             * 
 *                                                                          * 
 * Source Table:    TMP_LSF_JOB - etl_sys.TMP_LSF_JOB     A5VLIHEZ.BM000051 * 
 * Target Table:    ETL_JOB - etl_sys.ETL_JOB             A5VLIHEZ.BM00004G * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008F);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let SYSLAST = %nrquote(etl_sys.TMP_LSF_JOB); 

%macro etls_sql_merge;

/* Determine if the table exists  */ 
%let etls_tableExist = %eval(%sysfunc(exist(etl_sys.ETL_JOB, DATA)) or 
      %sysfunc(exist(etl_sys.ETL_JOB, VIEW))); 

/*---- Create a new table  ----*/ 
%if (&etls_tableExist eq 0) %then 
%do;  /* if table does not exist  */ 

   %put %str(NOTE: Creating table ...);
   
   data etl_sys.ETL_JOB
           (dbnull = (
                      JOB_ID = NO
                      PARENT_JOB_ID = YES
                      JOB_TYPE_CD = NO
                      JOB_NM = YES
                      SUCCESS_FLG = YES
                      START_DTTM = NO
                      END_DTTM = YES
                      LSF_JOB_ID = YES
                      ERROR_DESC = YES
                      HOST_NM = NO
                      HOST_PROCESS_ID = NO
                      LOG_PATH = YES
                      HOST_PARENT_PROCESS_ID = YES
                      TEMP = YES
                      USER_NM = YES));
      attrib JOB_ID length = 8
         label = 'JOB_ID'; 
      attrib PARENT_JOB_ID length = 8
         label = 'PARENT_JOB_ID'; 
      attrib JOB_TYPE_CD length = $10
         format = $10.
         informat = $10.
         label = 'JOB_TYPE_CD'; 
      attrib JOB_NM length = $100
         format = $100.
         informat = $100.
         label = 'JOB_NM'; 
      attrib SUCCESS_FLG length = $1
         format = $1.
         informat = $1.
         label = 'SUCCESS_FLG'; 
      attrib START_DTTM length = 8
         format = DATETIME24.3
         informat = DATETIME24.3
         label = 'START_DTTM'; 
      attrib END_DTTM length = 8
         format = DATETIME24.3
         informat = DATETIME24.3
         label = 'END_DTTM'; 
      attrib LSF_JOB_ID length = 8
         label = 'LSF_JOB_ID'; 
      attrib ERROR_DESC length = $255
         format = $255.
         informat = $255.
         label = 'ERROR_DESC'; 
      attrib HOST_NM length = $32
         format = $32.
         informat = $32.
         label = 'HOST_NM'; 
      attrib HOST_PROCESS_ID length = 8
         label = 'HOST_PROCESS_ID'; 
      attrib LOG_PATH length = $255
         format = $255.
         informat = $255.
         label = 'LOG_PATH'; 
      attrib HOST_PARENT_PROCESS_ID length = 8
         label = 'HOST_PARENT_PROCESS_ID'; 
      attrib TEMP length = $200
         format = $200.
         informat = $200.
         label = 'TEMP'; 
      attrib USER_NM length = $200
         format = $200.
         informat = $200.
         label = 'TEMP'; 
      call missing(of _all_);
      stop;
   run;
   
   %rcSet(&syserr); 
   
   /*---- Create the integrity constraints for a table  ----*/ 
   %put %str(NOTE: Creating integrity constraints ...);
   proc sql;
      connect to ORACLE
      ( 
          DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
      ); 
      reset noprint; 
      
      execute 
      ( 
         alter table ETL_SYS.ETL_JOB      
            add primary key (JOB_ID)
            add foreign key (PARENT_JOB_ID) references ETL_SYS.ETL_JOB
            add foreign key (LSF_JOB_ID) references ETL_SYS.LSF_JOB
      ) by ORACLE; 
      
      %rcSet(&sqlrc); 
      
      disconnect from ORACLE; 
   quit;
   
   %rcSet(&sqlrc); 
   
%end;  /* if table does not exist  */ 

/*---- Update the target table  ----*/ 
proc sql;
   connect to ORACLE
   ( 
       DEFER=YES DBSERVER_MAX_BYTES=1 DBCLIENT_MAX_BYTES=1 PATH='rusrpomag01.rus.sas.com:1521/rpo01.rus.sas.com' AUTHDOMAIN="DwhAuth_ETL_SYS" 
   ); 
   execute 
   ( 
      MERGE INTO
         ETL_SYS.ETL_JOB
      USING
         ETL_SYS.TMP_LSF_JOB
      ON
         (
            TMP_LSF_JOB.LSF_JOB_ID = ETL_JOB.LSF_JOB_ID
            and TMP_LSF_JOB.LSF_STATUS_CD IN (%oracle_string(&LSF_EXIT),%oracle_string(&LSF_DONE))
         )
      WHEN MATCHED THEN UPDATE
         set 
            ETL_JOB.SUCCESS_FLG= %oracle_string(N) 
            WHERE 
            ETL_JOB.SUCCESS_FLG IS NULL
   ) by ORACLE; 
   
   %rcSet(&sqlrc); 
   
   disconnect from ORACLE; 
   
quit;

%rcSet(&syscc); 


%mend etls_sql_merge;

/* execute etls_sql_merge  */ 
%etls_sql_merge;



/** Step end Merge **/

/*==========================================================================* 
 * Step:            Завершить модуль                      A5VLIHEZ.BT00008G * 
 * Transform:       Завершить модуль                                        * 
 * Description:                                                             * 
 *==========================================================================*/ 

%let transformID = %quote(A5VLIHEZ.BT00008G);
%let trans_rc = 0;
%let etls_stepStartTime = %sysfunc(datetime(), datetime20.); 

%let _INPUT_count = 0; 
%let _OUTPUT_count = 0; 

%let refDesc = ;

/*****************************************************************
* ВЕРСИЯ:
*   $Id: transform_job_finish.sas 4050:7da4b3472aef 2015-08-10 09:37:44Z rusane $
*
******************************************************************
* НАЗНАЧЕНИЕ:
*   Регистрирует конец модуля ETL.
*
* ПАРАМЕТРЫ:
*   нет
*
******************************************************************/

%macro transform_job_finish;
   %etl_job_finish;
%mend transform_job_finish;

%transform_job_finish;


%rcSet(&syserr); 
%rcSet(&sysrc); 
%rcSet(&sqlrc); 



/** Step end Завершить модуль **/

%let etls_endTime = %sysfunc(datetime(),datetime.);

