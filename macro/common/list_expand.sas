/*****************************************************************
*  ВЕРСИЯ:
*     $Id: 17a6d7bc5159558d39de9d858b8435c314a02224 $
*
******************************************************************
*  НАЗНАЧЕНИЕ:
*     Формирует выходную строку на основе шаблона генерации и списка значений.
*
*  ПАРАМЕТРЫ:
*     mpWith                  +  входной список значений
*     mpWithDlm               -  разделитель значений во входном списке, по умолчанию пробел
*     mpPattern               +  шаблон для генерации строки.  В шаблоне заменяются:
*                                {} на элемент
*                                {#} на порядковый номер элемента в списке, начиная с 1
*                                {macro} на результат лямбда-макроса
*     mpOutDlm                -  символ-разделитель выходной строки, по умолчанию пробел
*
******************************************************************
*  Использует:
*     %is_blank
*
*  Устанавливает макропеременные:
*     нет
*
*  Ограничения:
*     1. В отличие от member_vars_expand, сохраняет значения списка "как есть", а не апкейсит.
*     2. В отличие от member_vars_expand, допускает значения со спец. символами.
*     3. В отличие от member_vars_expand, mpOutDlm не зависит от контекста исполнения.
*     4. Предполагается, что лямбда-макрос служит для генерации текста.  Если в нем есть
*        исполняемые инструкции, они не будут выполнены, пока сгенерированный этим макросом текст
*        не будет исполнен.
*
******************************************************************
*  Пример использования:
*     %put %list_expand(mpWith=AAA bbb CCC, mpPattern={#}={}, mpOutDlm=%str(, ));
*     выводит: 1=AAA, 2=bbb, 3=CCC
*
*     %macro lambda1 (x);
*        %do;(&x)%end;
*     %mend lambda1;
*     %macro lambda2 (x);
*        %do;<&x>%end;
*     %mend lambda2;
*     %put %list_expand(AAA bbb CCC, {lambda1}={lambda2});
*     выводит: (AAA)=<AAA> (bbb)=<bbb> (CCC)=<CCC>
*
******************************************************************
*  29-04-2015  Нестерёнок  Начальное кодирование
*  07-07-2017  Сазонов     Добавлен bquote
*  25-04-2018  Нестерёнок  Добавлен лямбда-паттерн
******************************************************************/

%macro list_expand (
   mpWith,
   mpPattern,
   mpWithDlm   =  %str( ),
   mpOutDlm    =  %str( )
);
   %LOCAL mvI mvItem mvOut mvDlm;
   %LET mvItem = %SCAN(&mpWith, 1, &mpWithDlm);
   %LET mvI = 1;
   %DO %WHILE(not %is_blank(mvItem));
      %LET mvOut = %SYSFUNC(PrxChange(s/\{\}/%bquote(&mvItem)/, -1, &mpPattern));
      %LET mvOut = %SYSFUNC(PrxChange(s/\{#\}/&mvI/, -1, &mvOut));
      %LET mvOut = %SYSFUNC(PrxChange(s/\{(\w+)\}/%$1(%bquote(&mvItem))/, -1, &mvOut));
%do;&mvDlm&mvOut%end;
      %LET mvDlm = &mpOutDlm;

      %LET mvI = %EVAL(&mvI + 1);
      %LET mvItem = %SCAN(&mpWith, &mvI, &mpWithDlm);
   %END;
%mend list_expand;
